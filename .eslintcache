[{"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\index.js":"1","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\App.js":"2","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js":"3","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\customBackdrop.js":"4","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\contexts\\auth.js":"5","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js":"6","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\RewatchRoom\\rewatchRoom-component.js":"7","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js":"8","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\history-component.js":"9","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js":"10","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js":"11","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\otherUserProfile\\OtherUserProfile.js":"12","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\UserProfile\\ClientUserProfile.js":"13","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Activate\\ActivateAccount.js":"14","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\ForgotPassword\\ResetPassword.js":"15","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\ForgotPassword\\ForgotPassword.js":"16","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\socket.js":"17","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\store.js":"18","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Ranking\\Ranking.js":"19","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js":"20","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Index\\Index.js":"21","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Login\\Login.js":"22","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js":"23","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js":"24","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\SignUp\\SignUp.js":"25","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\api.js":"26","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\contexts\\game.js":"27","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js":"28","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchRoomTab-component.js":"29","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchGame-component.js":"30","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\CustomCard\\ImgMediaCard.js":"31","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\GameRecords\\GameRecords.js":"32","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js":"33","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\game-component.js":"34","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js":"35","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js":"36","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchBoard-component.js":"37","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js":"38","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\chatHistory-component.js":"39","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\serviceGame.js":"40","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchHistory-component.js":"41","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\board-component.js":"42","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js":"43","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\square-component.js":"44","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchSquare-component.js":"45","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js":"46","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js":"47","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js":"48","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js":"49","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js":"50","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js":"51"},{"size":207,"mtime":1610619253094,"results":"52","hashOfConfig":"53"},{"size":6390,"mtime":1610622480374,"results":"54","hashOfConfig":"53"},{"size":863,"mtime":1610619253151,"results":"55","hashOfConfig":"53"},{"size":335,"mtime":1610619070952,"results":"56","hashOfConfig":"53"},{"size":2166,"mtime":1610619253148,"results":"57","hashOfConfig":"53"},{"size":4206,"mtime":1610619188055,"results":"58","hashOfConfig":"53"},{"size":2717,"mtime":1610619253135,"results":"59","hashOfConfig":"53"},{"size":4086,"mtime":1610619253153,"results":"60","hashOfConfig":"53"},{"size":1401,"mtime":1610625218977,"results":"61","hashOfConfig":"53"},{"size":2934,"mtime":1610622480383,"results":"62","hashOfConfig":"53"},{"size":1710,"mtime":1610619070949,"results":"63","hashOfConfig":"53"},{"size":2185,"mtime":1610619253128,"results":"64","hashOfConfig":"53"},{"size":2093,"mtime":1610619253130,"results":"65","hashOfConfig":"53"},{"size":1324,"mtime":1610622480390,"results":"66","hashOfConfig":"53"},{"size":3598,"mtime":1610619253141,"results":"67","hashOfConfig":"53"},{"size":2198,"mtime":1610619253143,"results":"68","hashOfConfig":"53"},{"size":135,"mtime":1610619192303,"results":"69","hashOfConfig":"53"},{"size":170,"mtime":1610619070960,"results":"70","hashOfConfig":"53"},{"size":3385,"mtime":1610619193380,"results":"71","hashOfConfig":"53"},{"size":190,"mtime":1610619070956,"results":"72","hashOfConfig":"53"},{"size":20438,"mtime":1610619192981,"results":"73","hashOfConfig":"53"},{"size":7165,"mtime":1610626163598,"results":"74","hashOfConfig":"53"},{"size":16663,"mtime":1610619192665,"results":"75","hashOfConfig":"53"},{"size":2246,"mtime":1610619070940,"results":"76","hashOfConfig":"53"},{"size":6399,"mtime":1610619253133,"results":"77","hashOfConfig":"53"},{"size":71,"mtime":1610619253095,"results":"78","hashOfConfig":"53"},{"size":1367,"mtime":1610619190456,"results":"79","hashOfConfig":"53"},{"size":1703,"mtime":1610619253044,"results":"80","hashOfConfig":"53"},{"size":1762,"mtime":1610619070946,"results":"81","hashOfConfig":"53"},{"size":2407,"mtime":1610619070943,"results":"82","hashOfConfig":"53"},{"size":3046,"mtime":1610619070936,"results":"83","hashOfConfig":"53"},{"size":7870,"mtime":1610619070938,"results":"84","hashOfConfig":"53"},{"size":5927,"mtime":1610619188435,"results":"85","hashOfConfig":"53"},{"size":6374,"mtime":1610619189627,"results":"86","hashOfConfig":"53"},{"size":169,"mtime":1610619070957,"results":"87","hashOfConfig":"53"},{"size":179,"mtime":1610619070957,"results":"88","hashOfConfig":"53"},{"size":878,"mtime":1610619070943,"results":"89","hashOfConfig":"53"},{"size":1637,"mtime":1610619253044,"results":"90","hashOfConfig":"53"},{"size":1995,"mtime":1610619070942,"results":"91","hashOfConfig":"53"},{"size":3712,"mtime":1610619253095,"results":"92","hashOfConfig":"53"},{"size":1458,"mtime":1610619070944,"results":"93","hashOfConfig":"53"},{"size":883,"mtime":1610619189294,"results":"94","hashOfConfig":"53"},{"size":2562,"mtime":1610619253093,"results":"95","hashOfConfig":"53"},{"size":533,"mtime":1610619193618,"results":"96","hashOfConfig":"53"},{"size":478,"mtime":1610619070946,"results":"97","hashOfConfig":"53"},{"size":159,"mtime":1610619070958,"results":"98","hashOfConfig":"53"},{"size":781,"mtime":1610619070958,"results":"99","hashOfConfig":"53"},{"size":7163,"mtime":1610619189890,"results":"100","hashOfConfig":"53"},{"size":8360,"mtime":1610619188913,"results":"101","hashOfConfig":"53"},{"size":575,"mtime":1610619070959,"results":"102","hashOfConfig":"53"},{"size":10330,"mtime":1610619188609,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1d9nrl9",{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"106"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\index.js",[],["230","231"],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\App.js",["232","233"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { AuthProvider } from \"./contexts/auth.js\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute.js\";\r\nimport CustomAppBar from \"./components/CustomAppBar/CustomAppBar.js\";\r\nimport ChatBox from \"./components/ChatBox/ChatBox.js\";\r\n\r\nimport Index from \"./views/Index/Index\";\r\nimport Login from \"./views/Login/Login\";\r\nimport SignUp from \"./views/SignUp/SignUp\";\r\nimport Ranking from \"./views/Ranking/Ranking\";\r\nimport GameRoom from \"./views/GameRoom/gameRoom-component\";\r\n\r\nimport PlayerCard from \"./components/PlayerCard/playerCard-component\";\r\n\r\nimport {\r\n  Backdrop,\r\n  Grid,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport CaroOnlineStore from \"./redux/store\";\r\nimport History from \"./components/Room/history-component.js\";\r\nimport RoomTab from \"./components/Room/RoomTab-component.js\";\r\nimport OnlineList from \"./components/OnlineList/onlineList-component.js\";\r\nimport socket from \"./services/socket\";\r\nimport RewatchRoom from \"./views/RewatchRoom/rewatchRoom-component.js\";\r\nimport ClientUserProfile from \"./views/UserProfile/ClientUserProfile.js\";\r\n\r\nimport Global_IsAwaitingServerResponse_ActionCreator from \"./redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator\";\r\nimport ForgotPassword from \"./views/ForgotPassword/ForgotPassword.js\";\r\nimport ResetPassword from \"./views/ForgotPassword/ResetPassword.js\";\r\nimport ActivateAccount from \"./views/Activate/ActivateAccount.js\";\r\nimport { CustomBackdrop } from \"./components/customBackdrop.js\";\r\nimport OtherUserProfile from \"./views/otherUserProfile/OtherUserProfile.js\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [isLoadingPrompt, setLoadingPrompt] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubcribe = CaroOnlineStore.subscribe(() => {\r\n      const appState = CaroOnlineStore.getState();\r\n      setLoadingPrompt(appState.isAwaitingServerResponse);\r\n    });\r\n\r\n    socket.on(\"is-matchmaking\", ({ state }) => {\r\n      setLoadingPrompt(state ? \"Đang chờ đợi nối cặp từ phía server...\" : null);\r\n    });\r\n\r\n    socket.on(\"is-waiting-create-room\", ({ state }) => {\r\n      setLoadingPrompt(\r\n        state ? \"Tìm được người thích hợp, đang tạo phòng...\" : null\r\n      );\r\n    });\r\n\r\n    socket.on(\"matchmake-success\", ({ yourUserId }) => {\r\n      CaroOnlineStore.dispatch(\r\n        Global_IsAwaitingServerResponse_ActionCreator(\r\n          \"Tìm được người thích hợp, đang tạo phòng...\"\r\n        )\r\n      );\r\n      socket.emit(\"accept matchmake\", { myUserId: yourUserId });\r\n    });\r\n\r\n    socket.on(\"room-create-success\", ({ yourRoom }) => {\r\n      const roomId = yourRoom._id.toString();\r\n      const roomLink = `/room/${roomId}`;\r\n      window.location.href = roomLink;\r\n      return;\r\n    });\r\n\r\n    return () => {\r\n      unsubcribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <CustomAppBar\r\n            style={\r\n              isLoadingPrompt !== null\r\n                ? {\r\n                    display: \"none\",\r\n                  }\r\n                : { display: \"flex\" }\r\n            }\r\n          ></CustomAppBar>\r\n          <main>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\">\r\n                <Index />\r\n              </PrivateRoute>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <SignUp />\r\n              </Route>\r\n              <Route exact path=\"/activate/:activationToken\">\r\n                <ActivateAccount />\r\n              </Route>\r\n              <Route exact path=\"/forgot-password\">\r\n                <ForgotPassword />\r\n              </Route>\r\n              <Route exact path=\"/reset-password/:resetPasswordToken\">\r\n                <ResetPassword />\r\n              </Route>\r\n\r\n              <PrivateRoute exact path=\"/ranking\">\r\n                <Ranking />\r\n              </PrivateRoute>\r\n              <PrivateRoute exact path=\"/room/:id\">\r\n                <GameRoom />\r\n              </PrivateRoute>\r\n\r\n              <PrivateRoute exact path=\"/profile\">\r\n                <ClientUserProfile></ClientUserProfile>\r\n              </PrivateRoute>\r\n\r\n              <PrivateRoute exact path=\"/users/:username\">\r\n                <OtherUserProfile></OtherUserProfile>\r\n              </PrivateRoute>\r\n\r\n              <Route exact path=\"/game-records/:id\">\r\n                <RewatchRoom></RewatchRoom>\r\n              </Route>\r\n\r\n              {/* Test area */}\r\n              <Route exact path=\"/test/chatBox\">\r\n                <ChatBox />\r\n              </Route>\r\n              <Route exact path=\"/test/characterCard\">\r\n                <PlayerCard></PlayerCard>\r\n              </Route>\r\n\r\n              <Route exact path=\"/test/history\">\r\n                <History></History>\r\n              </Route>\r\n\r\n              <Route exact path=\"/test/RoomTab\">\r\n                <RoomTab></RoomTab>\r\n              </Route>\r\n\r\n              <Route exact path=\"/test/online\">\r\n                <OnlineList></OnlineList>\r\n              </Route>\r\n\r\n              <Route exact path=\"/test/record/:id\">\r\n                <RewatchRoom></RewatchRoom>\r\n              </Route>\r\n            </Switch>\r\n          </main>\r\n          {/* <Grid container>\r\n            <OnlineList></OnlineList>\r\n          </Grid> */}\r\n        </React.Fragment>\r\n        <Backdrop\r\n          open={isLoadingPrompt !== null}\r\n          style={{ color: \"#fff\", zIndex: 100 }}\r\n        >\r\n          <Grid container item justify=\"center\">\r\n            <Grid container item xs={12} justify=\"center\">\r\n              <CircularProgress color=\"inherit\" />\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n              <Typography variant=\"body1\" style={{ color: \"white\" }}>\r\n                {isLoadingPrompt}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\customBackdrop.js",["234","235","236"],"import { Backdrop, Button, CircularProgress, Container, Grid, Typography } from \"@material-ui/core\";\r\n\r\nexport function CustomBackdrop(props) {\r\n  return (\r\n    <Container>\r\n      <Backdrop open={props.open} style={{ color: \"#fff\", zIndex: 100 }}>\r\n        <Button>Hello there</Button>\r\n\r\n      </Backdrop>\r\n    </Container>\r\n\r\n  );\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\contexts\\auth.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js",["237","238","239"],"import { IconButton, InputBase, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useGame } from \"../../contexts/game\";\r\nimport socket from \"../../services/socket\";\r\n\r\nconst chatData = [\r\n  {\r\n    name: \"Billy\",\r\n    msgList: [\"Hello\"],\r\n    direction: \"left\",\r\n  },\r\n  {\r\n    name: \"Josh\",\r\n    msgList: [\"Hi\", \"Triple message right.\", \"Triple message right.\"],\r\n    direction: \"right\",\r\n  },\r\n  {\r\n    name: \"Anna\",\r\n    msgList: [\"Double message left\", \"Double message left\"],\r\n    direction: \"left\",\r\n  },\r\n  {\r\n    name: \"Billy\",\r\n    msgList: [\"Single message left\"],\r\n    direction: \"left\",\r\n  },\r\n  {\r\n    name: \"Josh\",\r\n    msgList: [\r\n      \"Hi\",\r\n      \"Long message left. Long message left. Long message left. Long message left. \",\r\n    ],\r\n    direction: \"left\",\r\n  },\r\n  {\r\n    name: \"Anna\",\r\n    msgList: [\r\n      \"Long message right. Long message right. Long message right. Long message right. Long message right. \",\r\n    ],\r\n    direction: \"right\",\r\n  },\r\n  {\r\n    name: \"Smith\",\r\n    msgList: [\r\n      \"Standalone long message right. Standalone long message right. Standalone long message right. Standalone long message right. \",\r\n    ],\r\n    direction: \"right\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    maxWidth: 400,\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 45px\",\r\n    gridTemplateColumns: \"1fr\",\r\n  },\r\n  msgContainer: {\r\n    marginBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflow: \"auto\",\r\n    maxHeight: 500,\r\n  },\r\n\r\n  message: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  bottomBar: {\r\n    gridRow: \"5/6\",\r\n    display: \"flex\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n  },\r\n  inputBase: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(1, 2),\r\n    backgroundColor: \"#f0f2f5\",\r\n    borderRadius: theme.spacing(16),\r\n  },\r\n  buttonSend: {\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#0099ff\",\r\n  },\r\n}));\r\n\r\nexport default function ChatBox() {\r\n  // const { username } = useGame();\r\n\r\n  // const username = \"hellothere\"\r\n\r\n  const { username, room, chat } = useGame();\r\n\r\n  const msgContentRef = useRef();\r\n\r\n  const handleClickSend = () => {\r\n\r\n\r\n\r\n    // if (message.length > 0) {\r\n    //   socket.emit(\"send-chat-message\", { message: message, username: username });\r\n    // }\r\n\r\n    const msg = msgContentRef.current.value;\r\n\r\n    const trimmedMesaage = msg.trim();\r\n\r\n    if (trimmedMesaage.length > 0) {\r\n      socket.emit(\"send-chat-message\", { roomId: room._id, message: trimmedMesaage, username: username });\r\n      msgContentRef.current.value = \"\";\r\n      return;\r\n    }\r\n  }\r\n\r\n  // const handleOnChangeMessage = (e) => {\r\n  //   const trimedMessage = e.target.value.trim();\r\n  //   setMessage(trimedMessage);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Paper elevation={0} className={classes.msgContainer}>\r\n        {\r\n          chat ?\r\n            <div>\r\n              {chat.messages.map((e) => {\r\n                return (\r\n                  <Typography className={classes.message}>\r\n                    {`${e.username}: ${e.message}`}\r\n                  </Typography>\r\n                )\r\n              })}\r\n            </div>\r\n            :\r\n\r\n            <div></div>\r\n\r\n        }\r\n\r\n      </Paper>\r\n\r\n      <div className={classes.bottomBar}>\r\n        <Paper elevation={0} className={classes.inputContainer}>\r\n          <InputBase\r\n            className={classes.inputBase}\r\n            inputRef={msgContentRef}\r\n          />\r\n        </Paper>\r\n        {/* <Button\r\n          className={classes.buttonSend}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n        </Button> */}\r\n        <IconButton className={classes.buttonSend} variant=\"contained\" onClick={handleClickSend}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\RewatchRoom\\rewatchRoom-component.js",["240","241","242","243","244","245","246","247","248","249","250","251"],"import React, { useEffect, useState, useCallback } from 'react';\r\nimport API from \"../../services/api\";\r\nimport { Button, Typography, Dialog, Slide, Backdrop, Grid, CircularProgress, DialogActions, DialogTitle, DialogContent, DialogContentText, makeStyles } from '@material-ui/core';\r\nimport './index.css';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { GameContext } from '../../contexts/game';\r\nimport socket from '../../services/socket';\r\nimport RewatchGame from \"../../components/RewatchRoom/rewatchGame-component\";\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport CaroOnlineStore from '../../redux/store';\r\nimport Global_IsAwaitingServerResponse_ActionCreator from '../../redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator';\r\nimport RewatchRoomTab from '../../components/RewatchRoom/rewatchRoomTab-component';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  roomTab: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function RewatchRoom() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n\r\n\r\n  const [game, setGame] = useState();\r\n\r\n  const [chat, setChat] = useState();\r\n\r\n  const [isLoadingPrompt, setLoadingPrompt] = useState(\"Đang tải phòng chơi, vui lòng chờ\");\r\n\r\n  const fetchData = useCallback(async () => {\r\n    console.log(\"heelo there\");\r\n    const result = await Axios.get(API.url + `/game-records/${params.id}`);\r\n\r\n    const data = result.data;\r\n\r\n    console.log(data);\r\n    setGame(data.game);\r\n    setChat(data.chat);\r\n  }, [params.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    setLoadingPrompt(null);\r\n  }, [fetchData]);\r\n\r\n  const value = {\r\n    game: game,\r\n    chat: chat,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      <div>\r\n        {game ?\r\n          <div style={{ display: 'flex' }}>\r\n            <RewatchGame></RewatchGame>\r\n            <div className={classes.roomTab}>\r\n              <RewatchRoomTab>\r\n              </RewatchRoomTab>\r\n            </div>\r\n          </div> :\r\n\r\n          <></>\r\n\r\n        }\r\n\r\n\r\n        <Backdrop open={isLoadingPrompt !== null} style={{ color: \"#fff\", zIndex: 100, justifyContent: \"center\" }}>\r\n          <Grid container item justify=\"center\">\r\n            <Grid container item xs={12} justify=\"center\"><CircularProgress color=\"inherit\" /></Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n              <Typography variant=\"body1\" style={{ color: 'white' }}>\r\n                {isLoadingPrompt}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n      </div>\r\n    </GameContext.Provider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js",["252"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport socket from \"../../services/socket\";\r\nimport Axios from \"axios\";\r\nimport API from \"../../services/api\";\r\n\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n  loginButton: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  signUpButton: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DefaultAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const { authTokens, setAuthTokens } = useAuth();\r\n  const open = Boolean(anchorEl);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    const result = await Axios.get(API.url + \"/api/auth/\");\r\n\r\n    const userId = result.data._id;\r\n\r\n    socket.emit(\"logout\");\r\n    setAuthTokens(null);\r\n    setAnchorEl(null);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleProfile = () => {\r\n    console.log(authTokens);\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          component={Link}\r\n          to=\"/\"\r\n        >\r\n          Caro Online\r\n        </Typography>\r\n        <div>\r\n          {authTokens ? (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"ranking\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  history.push(\"/ranking\");\r\n                }}\r\n              >\r\n                <FormatListNumberedIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={handleMenu}\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfile}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogOut}>Log Out</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Button\r\n                className={classes.signUpButton}\r\n                color=\"inherit\"\r\n                href=\"/signup\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Button\r\n                className={classes.loginButton}\r\n                color=\"inherit\"\r\n                href=\"/login\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\history-component.js",["253"],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js",["254","255","256","257","258","259","260","261","262","263"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DefaultAvatar from \"../../assets/tic-tac-toe.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport socket from \"../../services/socket\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 300,\r\n    minHeight: \"100vh\",\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n\r\n  listItem: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  RRLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nfunction OnlineListItem({ avatar, username }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Link className={classes.RRLink} to=\"/user\">\r\n      <ListItem className={classes.list}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <img\r\n              style={{ width: 35, height: 35 }}\r\n              src={avatar ? avatar : DefaultAvatar}\r\n              alt=\"avatar\"\r\n            />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={username} />\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default function OnlineList() {\r\n  const classes = useStyles();\r\n\r\n  const [onlineUsers, setOnlineUsers] = useState();\r\n\r\n  const { authTokens } = useAuth();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"update-online-list\", (allOnlineUsers) => {\r\n      setOnlineUsers(allOnlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  if (authTokens && onlineUsers) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <List dense={true} className={classes.demo}>\r\n          {Object.keys(onlineUsers).map((key) => {\r\n            const userRow = onlineUsers[key];\r\n            return (\r\n              <OnlineListItem\r\n                avatar={userRow.profileImage}\r\n                username={userRow.username}\r\n              ></OnlineListItem>\r\n            );\r\n          })}\r\n          <div style={{ flexGrow: 1 }}></div>\r\n        </List>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js",["264"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport History from './history-component';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport ChatBox from '../ChatBox/ChatBox';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function RoomTab() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{maxWidth: 500, height: 670}}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab label=\"History\" {...a11yProps(0)} />\r\n        <Tab label=\"Chat\" {...a11yProps(0)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <History></History>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <ChatBox></ChatBox>\r\n      </TabPanel>\r\n    </Paper>\r\n  );\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\otherUserProfile\\OtherUserProfile.js",["265","266"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImgMediaCard from \"../../components/CustomCard/ImgMediaCard\";\r\nimport GameRecords from \"../../components/GameRecords/GameRecords\";\r\nimport API from \"../../services/api\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function OtherUserProfile() {\r\n  const classes = useStyles();\r\n  const { username } = useParams();\r\n  const [user, setUser] = React.useState({});\r\n  const [gameRecords, setGameRecords] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const getAllGameRecordsOfUser = async (username) => {\r\n      const response = await axios.get(\r\n        `${API.url}/game-records?username=${username}`\r\n      );\r\n      const data = response.data;\r\n      console.log(data);\r\n      setGameRecords(data.gameRecords);\r\n    };\r\n    getAllGameRecordsOfUser(username);\r\n    // return () => {\r\n    //   cleanup\r\n    // }\r\n  }, [username]);\r\n\r\n  React.useEffect(() => {\r\n    const getUserByUsername = async (username) => {\r\n      const response = await axios.get(\r\n        `${API.url}/api/users?username=${username}`\r\n      );\r\n      const data = response.data;\r\n      console.log(data);\r\n      setUser(data);\r\n    };\r\n    getUserByUsername(username);\r\n  }, [username]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item>\r\n            <ImgMediaCard\r\n              image={user.profileImage}\r\n              user={{\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(user.createdAt).toLocaleDateString(),\r\n                gamesWon: user.gamesWon,\r\n                gamesLost: user.gamesLost,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <GameRecords username={username} data={gameRecords} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  \r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\UserProfile\\ClientUserProfile.js",["267","268","269"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImgMediaCard from \"../../components/CustomCard/ImgMediaCard\";\r\nimport GameRecords from \"../../components/GameRecords/GameRecords\";\r\nimport API from \"../../services/api\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function ClientUserProfile() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = React.useState({});\r\n  const [gameRecords, setGameRecords] = React.useState([]);\r\n\r\n  const getAllGameRecordsOfUser = useCallback(async () => {\r\n    console.log(\"hello\");\r\n    const response = await axios.get(\r\n      API.url + '/game-records/personal/'\r\n    );\r\n    const data = response.data;\r\n    console.log(data);\r\n    console.log(\"after get\");\r\n    setGameRecords(data.gameRecords);\r\n  }, []);\r\n\r\n  const getUserByUsername = useCallback(async () => {\r\n    const response = await axios.get(API.url + '/api/auth/');\r\n    const data = response.data.user;\r\n    console.log(data);\r\n    setUser(data);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n\r\n    getAllGameRecordsOfUser();\r\n    getUserByUsername();\r\n    // return () => {\r\n    //   cleanup\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item>\r\n            <ImgMediaCard\r\n              image={user.profileImage}\r\n              user={{\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                createdAt: new Date(user.createdAt).toLocaleDateString(),\r\n                gamesWon: user.gamesWon,\r\n                gamesLost: user.gamesLost,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <GameRecords username={user.username} data={gameRecords} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  \r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Activate\\ActivateAccount.js",["270"],"import { Typography } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/api\";\r\n\r\nexport default function ActivateAccount() {\r\n  const { activationToken } = useParams();\r\n  const [activated, setActivated] = React.useState(false);\r\n  const [responseMsg, setResponseMsg] = React.useState();\r\n  const [severity, setSeverity] = React.useState(\"error\");\r\n\r\n  React.useEffect(() => {\r\n    const activateAccount = async () => {\r\n      console.log(activationToken);\r\n      const response = await axios.post(\r\n        `${API.url}/api/auth/activate/${activationToken}`\r\n        // `http://localhost:4000/api/auth/activate/${activationToken}`\r\n      );\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n        setActivated(true);\r\n        setSeverity(\"success\");\r\n      }\r\n\r\n      setResponseMsg(response.data.message);\r\n    };\r\n\r\n    if (!activated) {\r\n      activateAccount();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {activated ? (\r\n        <div>\r\n          {responseMsg && <Alert severity={severity}>{responseMsg}</Alert>}\r\n        </div>\r\n      ) : (\r\n        <Typography>Your account was activated.</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\ForgotPassword\\ResetPassword.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\ForgotPassword\\ForgotPassword.js",["271"],"import {\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"300\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const emailRef = React.useRef();\r\n  const [msg, setMsg] = React.useState(\"\");\r\n  const [severity, setSeverity] = React.useState(\"error\");\r\n  const [sentReqSuccessfully, setSentReqSuccessfully] = React.useState(false);\r\n\r\n  const checkInput = () => {\r\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n    if (!emailRegex.test(emailRef.current.value)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!checkInput()) {\r\n      setMsg(\"Email format wrong!\");\r\n      return;\r\n    }\r\n    // send request\r\n    const response = await axios.post(`${API.url}/api/auth/recover`, {\r\n      email: emailRef.current.value,\r\n    });\r\n\r\n    console.log(response);\r\n\r\n    if (response.status === 200) {\r\n      setSeverity(\"success\");\r\n      setSentReqSuccessfully(true);\r\n    }\r\n    setMsg(response.data.message);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <div className={classes.root}>\r\n        <Typography gutterBottom variant=\"h4\" align=\"center\">\r\n          ENTER YOUR EMAIL\r\n        </Typography>\r\n\r\n        {msg && <Alert severity={severity}>{msg}</Alert>}\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          id=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          inputRef={emailRef}\r\n          required\r\n          autoFocus\r\n        />\r\n        <Button\r\n          onClick={handleClick}\r\n          variant=\"contained\"\r\n          disabled={sentReqSuccessfully}\r\n        >\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\socket.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\store.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Ranking\\Ranking.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Index\\Index.js",["272"],"import React, { useEffect, useState } from \"react\";\r\nimport RoomNavigator from \"../../components/Room-Navigator-ForIndex/Room-Navigator\";\r\nimport RoomsGrid from \"../../components/Rooms-Grid-ForIndex/Rooms-Grid\";\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Dialog,\r\n  Button,\r\n  Slide,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport socket from \"../../services/socket\";\r\nimport Axios from \"axios\";\r\n\r\nimport API from \"../../services/api\";\r\n\r\nimport CaroOnlineStore from \"../../redux/store\";\r\nimport IndexPage_ErrorPopUp_ActionCreator from \"../../redux/actionCreators/Index/IndexPage_ErrorPopUp_ActionCreator\";\r\nimport IndexPage_RoomPasswordPrompt_ActionCreator from \"../../redux/actionCreators/Index/IndexPage_RoomPasswordPrompt_ActionCreator\";\r\nimport IndexPage_LoadingBackdrop_ActionCreator from \"../../redux/actionCreators/Index/IndexPage_LoadingBackdrop_ActionCreator\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Global_IsAwaitingServerResponse_ActionCreator from \"../../redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator\";\r\nimport OnlineList from \"../../components/OnlineList/onlineList-component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n  pageContent: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  roomNavigationBarArea: {\r\n    justifyContent: \"center\",\r\n    justifyItems: \"center\",\r\n  },\r\n  indexContentArea: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  boardGrid: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n\r\n  mainContainer: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Index() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [openBackdrop, setOpenBackdrop] = useState(false);\r\n  const [openRejoinRoomBackdrop, setOpenRejoinRoomBackdrop] = useState(null);\r\n\r\n  //State for create room dialog\r\n  const [openCreateRoomDialog, setOpenCreateRoomDialog] = React.useState(false);\r\n  const [disableForm, setDisableForm] = useState(false);\r\n  const [roomName, setRoomName] = useState(null);\r\n  const [roomDescription, setRoomDescription] = useState(null);\r\n  const [roomType, setRoomType] = useState(1);\r\n  const [roomPassword, setRoomPassword] = useState(null);\r\n  const [createRoomError, setCreateRoomError] = useState(null);\r\n\r\n  // State for room password typein dialog\r\n  const [roomToTypePassword, setRoomToTypePassword] = useState(null);\r\n  const [verifyPassword, setVerifyPassword] = useState(null);\r\n  const [verifyPasswordError, setVerifyPasswordError] = useState(null);\r\n\r\n  //State for error dialog\r\n  const [indexError, setIndexError] = useState(null);\r\n\r\n  const handleClickOpen = () => {\r\n    setDisableForm(false);\r\n    setOpenCreateRoomDialog(true);\r\n  };\r\n\r\n  const handleCloseCreateRoom = () => {\r\n    setOpenCreateRoomDialog(false);\r\n    setRoomName(null);\r\n    setRoomDescription(null);\r\n    setRoomPassword(null);\r\n    setRoomType(1);\r\n    setDisableForm(false);\r\n  };\r\n\r\n  const handleCloseErrorDialog = () => {\r\n    CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n    CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator(null));\r\n  };\r\n\r\n  const handleClosePasswordPromptDialog = () => {\r\n    CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n    CaroOnlineStore.dispatch(IndexPage_RoomPasswordPrompt_ActionCreator(null));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit(\"page-status\", \"index-page\");\r\n    }\r\n\r\n    const unsubcribe = CaroOnlineStore.subscribe(() => {\r\n      const appState = CaroOnlineStore.getState();\r\n      setOpenBackdrop(appState.IndexPage.isLoading);\r\n      setIndexError(appState.IndexPage.pageWideError);\r\n      setRoomToTypePassword(appState.IndexPage.roomToTypePassword);\r\n    });\r\n\r\n    const roomID = localStorage.getItem(\"isPlayingInRoomId\");\r\n    if (roomID) {\r\n      setOpenRejoinRoomBackdrop(roomID);\r\n    }\r\n\r\n    return () => {\r\n      unsubcribe();\r\n      if (socket) {\r\n        socket.emit(\"page-status\", null);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3} className={classes.pageContent}>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            justify=\"center\"\r\n            className={classes.roomNavigationBarArea}\r\n          >\r\n            <RoomNavigator onCreateRoomClick={handleClickOpen} />\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            justify=\"center\"\r\n            className={classes.indexContentArea}\r\n          >\r\n            <Grid container item md={11}>\r\n              <RoomsGrid />\r\n            </Grid>\r\n            <Grid container item md={1} xs={12}>\r\n              <OnlineList></OnlineList>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Create room dialog */}\r\n          <Dialog\r\n            fullScreen\r\n            open={openCreateRoomDialog}\r\n            TransitionComponent={Transition}\r\n            disableBackdropClick={disableForm}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Tạo phòng</DialogTitle>\r\n            <form\r\n              onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                setDisableForm(true);\r\n                setOpenBackdrop(true);\r\n\r\n                try {\r\n                  // api call here\r\n                  const newRoom = await Axios.post(\r\n                    API.url + \"/api/room-management/room\",\r\n                    {\r\n                      room_type: roomType,\r\n                      room_name: roomName,\r\n                      room_description: roomDescription,\r\n                      room_password: roomType === 2 ? roomPassword : undefined,\r\n                    }\r\n                  );\r\n\r\n                  const { data } = newRoom.data;\r\n\r\n                  const roomLink = `/room/${data[0]._id}`;\r\n                  history.push(roomLink);\r\n                } catch (e) {\r\n                  setOpenBackdrop(false);\r\n                  setDisableForm(false);\r\n                  setCreateRoomError(\r\n                    \"Có lỗi xảy ra trong lúc đang tạo phòng, vui lòng kiểm tra lại thông tin đã nhập, kiểm tra xem phòng đã đầy hoặc thử lại\"\r\n                  );\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Nhập các thông tin dưới đây để tạo phòng chơi. Có 2 loại\r\n                  phòng:\r\n                  <br />\r\n                  - PUBLIC: Mọi người đều có thể vào chơi và xem <br />-\r\n                  PRIVATE: Chỉ có thể vào chơi nếu nhập mật khẩu và không cho\r\n                  phép dự thính\r\n                </DialogContentText>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  <Grid container item xs={12} md={8}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      autoFocus\r\n                      id=\"RoomName\"\r\n                      label=\"Tên phòng\"\r\n                      fullWidth\r\n                      disabled={disableForm}\r\n                      value={roomName ? roomName : \"\"}\r\n                      onChange={(e) => {\r\n                        e.target.value = e.target.value.slice(\r\n                          0,\r\n                          Math.min(100, e.target.value.length)\r\n                        );\r\n                        setRoomName(e.target.value);\r\n                      }}\r\n                      margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      autoFocus\r\n                      id=\"RoomDescription\"\r\n                      label=\"Mô tả phòng\"\r\n                      fullWidth\r\n                      disabled={disableForm}\r\n                      value={roomDescription ? roomDescription : \"\"}\r\n                      onChange={(e) => {\r\n                        e.target.value = e.target.value.slice(\r\n                          0,\r\n                          Math.min(200, e.target.value.length)\r\n                        );\r\n                        setRoomDescription(e.target.value);\r\n                      }}\r\n                      margin=\"normal\"\r\n                    />\r\n                    <FormControl variant=\"outlined\" margin=\"normal\">\r\n                      <InputLabel>Loại phòng</InputLabel>\r\n                      <Select\r\n                        value={roomType}\r\n                        onChange={(e) => {\r\n                          setRoomPassword(null);\r\n                          setRoomType(e.target.value);\r\n                        }}\r\n                        label=\"Loại phòng\"\r\n                      >\r\n                        <MenuItem value={1}>\r\n                          <Typography\r\n                            variant=\"body1\"\r\n                            style={{ overflowWrap: \"break-word\" }}\r\n                          >\r\n                            Public\r\n                          </Typography>\r\n                        </MenuItem>\r\n                        <MenuItem value={2}>\r\n                          <Typography\r\n                            variant=\"body1\"\r\n                            style={{ overflowWrap: \"break-word\" }}\r\n                          >\r\n                            Private\r\n                          </Typography>\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                      required={roomType === 1 ? undefined : true}\r\n                      variant=\"outlined\"\r\n                      autoFocus\r\n                      id=\"RoomPassword\"\r\n                      label=\"Mật khẩu\"\r\n                      fullWidth\r\n                      disabled={disableForm}\r\n                      placeholder=\"Nhập mật khẩu dài từ 6 ký tự trở lên, từ 36 ký tự trở xuống\"\r\n                      value={roomPassword ? roomPassword : \"\"}\r\n                      style={{\r\n                        visibility: roomType === 1 ? \"collapse\" : \"visible\",\r\n                      }}\r\n                      type=\"password\"\r\n                      onChange={(e) => {\r\n                        e.target.value = e.target.value.slice(\r\n                          0,\r\n                          Math.min(36, e.target.value.length)\r\n                        );\r\n                        setRoomPassword(e.target.value);\r\n                      }}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </Grid>\r\n                  <Box\r\n                    component={Grid}\r\n                    container\r\n                    item\r\n                    md={4}\r\n                    display={{ xs: \"none\", md: \"flex\" }}\r\n                    justify=\"center\"\r\n                  >\r\n                    <Grid item xs={8}>\r\n                      <img\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"Index/TicTacToeBoardIcon.png\"\r\n                        }\r\n                        alt=\"CaroImage\"\r\n                        width=\"100%\"\r\n                      />\r\n                    </Grid>\r\n                  </Box>\r\n                  {createRoomError ? (\r\n                    <Grid container item xs={12} justify=\"center\">\r\n                      <Alert severity=\"error\">{createRoomError}</Alert>\r\n                    </Grid>\r\n                  ) : null}\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleCloseCreateRoom} color=\"secondary\">\r\n                  Đóng\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={\r\n                    disableForm ||\r\n                    (roomType === 1\r\n                      ? false\r\n                      : !roomPassword || roomPassword.length < 6\r\n                      ? true\r\n                      : false)\r\n                  }\r\n                >\r\n                  Tạo\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n            {/* Loading backdrop */}\r\n            <Backdrop\r\n              open={openBackdrop}\r\n              style={{ color: \"#fff\", zIndex: 100 }}\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n          </Dialog>\r\n\r\n          {/* Password type in dialog */}\r\n          <Dialog\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            open={roomToTypePassword ? true : false}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClosePasswordPromptDialog}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <form\r\n              onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                setDisableForm(true);\r\n                setOpenBackdrop(true);\r\n\r\n                try {\r\n                  // api call here\r\n                  await Axios.post(\r\n                    API.url +\r\n                      `/api/room-management/room/check-can-join/${roomToTypePassword._id}`,\r\n                    {\r\n                      room_password: verifyPassword,\r\n                    }\r\n                  );\r\n\r\n                  const roomLink = `/room/${roomToTypePassword._id}`;\r\n                  history.push(roomLink);\r\n                } catch (e) {\r\n                  setOpenBackdrop(false);\r\n                  setDisableForm(false);\r\n                  setVerifyPasswordError(\r\n                    \"Có lỗi xảy ra khi tham gia vào phòng chơi, vui lòng kiểm tra lại mật khẩu đã nhập hoặc refresh\"\r\n                  );\r\n                  return;\r\n                }\r\n              }}\r\n            >\r\n              <DialogTitle>\r\n                <Typography color=\"primary\">{\"Nhập mật khẩu\"}</Typography>\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  Vui lòng nhập mật khẩu để tham gia vào phòng\r\n                </DialogContentText>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  autoFocus\r\n                  id=\"passwordVerifyField\"\r\n                  label=\"Mật khẩu phòng\"\r\n                  fullWidth\r\n                  type=\"password\"\r\n                  placeholder=\"Nhập mật khẩu dài từ 6 ký tự trở lên, từ 36 ký tự trở xuống\"\r\n                  disabled={disableForm}\r\n                  value={verifyPassword ? verifyPassword : \"\"}\r\n                  onChange={(e) => {\r\n                    e.target.value = e.target.value.slice(\r\n                      0,\r\n                      Math.min(36, e.target.value.length)\r\n                    );\r\n                    setVerifyPassword(e.target.value);\r\n                  }}\r\n                  margin=\"normal\"\r\n                />\r\n                {verifyPasswordError ? (\r\n                  <Grid container item xs={12} justify=\"center\">\r\n                    <Alert severity=\"error\">{verifyPasswordError}</Alert>\r\n                  </Grid>\r\n                ) : null}\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={handleClosePasswordPromptDialog}\r\n                  color=\"secondary\"\r\n                >\r\n                  Đóng\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={\r\n                    disableForm || !verifyPassword || verifyPassword.length < 6\r\n                  }\r\n                >\r\n                  Vào\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n            {/* Loading backdrop */}\r\n            <Backdrop\r\n              open={openBackdrop}\r\n              style={{ color: \"#fff\", zIndex: 100 }}\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n          </Dialog>\r\n\r\n          {/* Error dialog */}\r\n          <Dialog\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            open={indexError ? true : false}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleCloseErrorDialog}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle>\r\n              <Typography color=\"secondary\">{\"Đã xảy ra lỗi...\"}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-slide-description\">\r\n                {indexError}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseErrorDialog} color=\"secondary\">\r\n                Đóng\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Loading backdrop */}\r\n      <Backdrop open={openBackdrop} style={{ color: \"#fff\", zIndex: 100 }}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {/* Join room backdrop */}\r\n      <Backdrop\r\n        open={openRejoinRoomBackdrop ? true : false}\r\n        style={{ color: \"#000000\", zIndex: 100 }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={async () => {\r\n            CaroOnlineStore.dispatch(\r\n              IndexPage_LoadingBackdrop_ActionCreator(true)\r\n            );\r\n            const getIsInRoom = await Axios.post(\r\n              API.url + \"/api/room-management/room/check-is-in-room\"\r\n            );\r\n            const isInData = getIsInRoom.data;\r\n            if (isInData.data) {\r\n              if (isInData.data.RoomType.NumberId !== 2) {\r\n                const roomLink = `/room/${isInData.data._id.toString()}`;\r\n                history.push(roomLink);\r\n              } else {\r\n                CaroOnlineStore.dispatch(\r\n                  IndexPage_LoadingBackdrop_ActionCreator(false)\r\n                );\r\n                CaroOnlineStore.dispatch(\r\n                  IndexPage_RoomPasswordPrompt_ActionCreator(isInData.data)\r\n                );\r\n              }\r\n              return;\r\n            } else {\r\n              localStorage.removeItem(\"isPlayingInRoomId\");\r\n              CaroOnlineStore.dispatch(\r\n                IndexPage_LoadingBackdrop_ActionCreator(false)\r\n              );\r\n              setOpenRejoinRoomBackdrop(null);\r\n            }\r\n          }}\r\n        >\r\n          Vào phòng lại\r\n        </Button>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\Login\\Login.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js",["273","274","275","276"],"import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport API from \"../../services/api\";\r\nimport { Button, Typography, Dialog, Slide, Backdrop, Grid, CircularProgress, DialogActions, DialogTitle, DialogContent, DialogContentText, makeStyles, Container } from '@material-ui/core';\r\nimport {Box, Paper} from '@material-ui/core';\r\nimport defaultAvatar from \"../../assets/tic-tac-toe.png\";\r\nimport './index.css';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { GameContext } from '../../contexts/game';\r\nimport socket from '../../services/socket';\r\nimport Game from \"../../components/Room/game-component\";\r\nimport { useAuth } from '../../contexts/auth';\r\nimport PlayerCard from '../../components/PlayerCard/playerCard-component';\r\n\r\nimport CaroOnlineStore from '../../redux/store';\r\nimport Global_IsAwaitingServerResponse_ActionCreator from '../../redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator';\r\nimport IndexPage_ErrorPopUp_ActionCreator from '../../redux/actionCreators/Index/IndexPage_ErrorPopUp_ActionCreator';\r\nimport IndexPage_LoadingBackdrop_ActionCreator from '../../redux/actionCreators/Index/IndexPage_LoadingBackdrop_ActionCreator';\r\nimport RoomTab from '../../components/Room/RoomTab-component';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  roomTab: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  }, \r\n  smallerContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  root: {\r\n    maxWidth: 150,\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 150,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    alignContent: 'center',\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  usernameText: {\r\n    marginBottom: 10,\r\n  },\r\n\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n})); \r\n\r\n\r\nexport default function GameRoom() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  //States for waiting users\r\n  const [havePlayer1Info, setHavePlayer1Info] = useState(false);\r\n  const player1Username = useRef(null);\r\n  const player1Trophies = useRef(null);\r\n  const player1GamesWon = useRef(null);\r\n  const player1GamesLost = useRef(null);\r\n\r\n  const [havePlayer2Info, setHavePlayer2Info] = useState(false);\r\n  const player2Username = useRef(null);\r\n  const player2Trophies = useRef(null);\r\n  const player2GamesWon = useRef(null);\r\n  const player2GamesLost = useRef(null);\r\n\r\n\r\n  const [roomInfo, setRoomInfo] = useState(null);\r\n  const [chat, setChat] = useState(null);\r\n\r\n  const [game, setGame] = useState(null);\r\n  const playerNumber = useRef(0);\r\n  const playerInfo = useRef(null);\r\n  const [isLoadingPrompt, setLoadingPrompt] = useState(\"Đang tải phòng chơi, vui lòng chờ\");\r\n\r\n  const [errorDialogText, setErrorDialogText] = useState(null);\r\n  const [timer, setTimer] = useState(\"\");\r\n  const [isWaiting, setWaiting] = useState(true);\r\n\r\n  let isRepeatedTab = useRef(false);\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const { authTokens } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const fetchData = useCallback(async () => {\r\n\r\n    //get join result\r\n    try {\r\n      const joinResult = await Axios.get(API.url + `/api/room-management/room/join/${params.id}`);\r\n      // Redirect to index if not logged in user tries to enter a private room\r\n      if (!authTokens && joinResult.data.room.RoomType.NumberId === 2) {\r\n        const roomLink = `/`;\r\n        history.push(roomLink);\r\n        return;\r\n      }\r\n\r\n      setRoomInfo(joinResult.data.room);\r\n      playerNumber.current = joinResult.data.playerNumber;\r\n      setUsername(joinResult.data.username);\r\n\r\n      if (joinResult.data.currentGame) {\r\n        setGame(joinResult.data.currentGame);\r\n      }\r\n\r\n      // Check user is logged in, if he is, check currentRoomId if not have and user is a player in this room\r\n      // if he is player 1 or 2 in the room\r\n      if (authTokens) {\r\n        const currentRoom_Id = localStorage.getItem(\"isPlayingInRoomId\");\r\n        if (!currentRoom_Id && joinResult.data.playerNumber !== 0) {\r\n          localStorage.setItem(\"isPlayingInRoomId\", params.id);\r\n        }\r\n      }\r\n\r\n      const joinRoomPayload = { roomId: joinResult.data.room._id };\r\n      if (joinResult.data.playerNumber !== 0) {\r\n        joinRoomPayload.playerNumber = joinResult.data.playerNumber;\r\n        switch (parseInt(joinResult.data.playerNumber)) {\r\n          case 1:\r\n            joinRoomPayload.playerId = joinResult.data.room.Player1._id;\r\n            playerInfo.current = joinResult.data.room.Player1;\r\n            break;\r\n          case 2:\r\n            joinRoomPayload.playerId = joinResult.data.room.Player2._id;\r\n            playerInfo.current = joinResult.data.room.Player2;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      socket.emit(\"join-room\", joinRoomPayload);\r\n\r\n      setLoadingPrompt(null);\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      localStorage.removeItem(\"isPlayingInRoomId\");\r\n      setLoadingPrompt(null);\r\n      setErrorDialogText('Đã xảy ra lỗi khi load phòng chơi, bạn sẽ được điều hướng về trang chủ sau đây');\r\n    }\r\n  }, [authTokens, params.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    socket.on(\"update-board\", (game) => {\r\n      console.log(\"on update-board\");\r\n      setGame(game);\r\n    });\r\n\r\n    socket.on(\"winner-found\", (game) => {\r\n      setGame(game);\r\n    });\r\n\r\n    socket.on(\"update-room\", (room) => {\r\n      if (room.IsDeleted) {\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(\"Phòng chơi đã bị giải tán, mọi người sẽ về trang chủ...\"));\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n        CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n\r\n        history.push(`/`);  \r\n        return;\r\n      }\r\n      setRoomInfo(room);\r\n    })\r\n\r\n    socket.on(\"update-new-game\", (game) => {\r\n      console.log(\"on update-new-game\");\r\n      setGame(game);\r\n    })\r\n\r\n    socket.on(\"countdown\", (countdown) => {\r\n      const timerString = `${Math.floor(countdown / 60)} : ${countdown % 60}`;\r\n\r\n      setTimer(timerString);\r\n    })\r\n\r\n    socket.on(\"timeout\", (game) => {\r\n      setGame(game);\r\n      console.log(game);\r\n    });\r\n\r\n    socket.on(\"update-chat\", (chat) => {\r\n      setChat(chat);\r\n    });\r\n\r\n    socket.on('room-processing-error', (error) => {\r\n      console.log(error);\r\n    })\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n\r\n    isRepeatedTab.current = false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('disconnect-other-tabs', ({ player, roomId, socketIdNot }) => {\r\n      if (playerNumber.current === player) {\r\n        isRepeatedTab.current = true;\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(\"Vui lòng kết nối lại nếu muốn chơi tiếp...\"));\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n        history.push('/');\r\n        return;\r\n      }\r\n    });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"room: \" + roomInfo);\r\n    // console.log(\"game: \" + game);\r\n    // console.log(\"player number: \" + playerNumber);\r\n\r\n    if (!roomInfo || !roomInfo.Player1 || !roomInfo.Player2) {\r\n      setWaiting(true);\r\n    }\r\n    else {\r\n      setWaiting(false);\r\n    }\r\n\r\n    if(roomInfo){\r\n      // Thong tin nguoi dung 1\r\n      if(roomInfo.Player1){\r\n        player1Username.current = roomInfo.Player1.username;\r\n        player1Trophies.current = roomInfo.Player1.trophies;\r\n        player1GamesWon.current = roomInfo.Player1.gamesWon;\r\n        player1GamesLost.current = roomInfo.Player1.gamesLost;\r\n        setHavePlayer1Info(true);\r\n      }else{\r\n        player1Username.current = null;\r\n        player1Trophies.current = null;\r\n        player1GamesWon.current = null;\r\n        player1GamesLost.current = null;\r\n        setHavePlayer1Info(false);\r\n      }\r\n\r\n      // Thong tin nguoi dung 2\r\n      if(roomInfo.Player2){\r\n        player2Username.current = roomInfo.Player2.username;\r\n        player2Trophies.current = roomInfo.Player2.trophies;\r\n        player2GamesWon.current = roomInfo.Player2.gamesWon;\r\n        player2GamesLost.current = roomInfo.Player2.gamesLost;\r\n        setHavePlayer2Info(true);\r\n      }else {\r\n        player2Username.current = null;\r\n        player2Trophies.current = null;\r\n        player2GamesWon.current = null;\r\n        player2GamesLost.current = null;\r\n        setHavePlayer2Info(false);\r\n      }\r\n    }\r\n  }, [roomInfo, game]);\r\n\r\n  const callBackToServerOnQuit = () => {\r\n    if(playerNumber.current === 0) return;\r\n    const prompt = \"Đang xử lý yêu cầu thoát game của bạn và đang điều hướng...\";\r\n    CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(prompt));\r\n\r\n    try {\r\n      const payload = { roomId: params.id, playerNumber: playerNumber.current };\r\n      payload.player = playerInfo.current;\r\n      socket.emit('leave-room', payload);\r\n      localStorage.removeItem(\"isPlayingInRoomId\");\r\n      CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n    } catch (e) {\r\n      if (playerNumber.current !== 0) {\r\n        CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator(\"Bạn thoát game không thành công, có thể rejoin lại từ nút ngay dưới đây\"));\r\n      }\r\n      CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n      history.push(`/`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = () => {\r\n      callBackToServerOnQuit();\r\n      window.onbeforeunload = () => {\r\n\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (!isRepeatedTab.current) {\r\n        callBackToServerOnQuit();\r\n      }\r\n    }\r\n  }, [history, playerInfo, params.id]);\r\n\r\n  const handleErrorDialogClose = () => {\r\n    setErrorDialogText(null);\r\n    setLoadingPrompt('Đang điều hướng về trang chủ...');\r\n    history.push('/');\r\n  };\r\n\r\n  const gameActions = {};\r\n\r\n  gameActions.makeMove = async (position) => {\r\n\r\n    //already marked\r\n    if (game.board[position] !== 0) {\r\n      return;\r\n    }\r\n    if (game.playerMoveNext === playerNumber.current && game.winner === 0) {\r\n      console.log(playerNumber.current);\r\n      await socket.emit(\"make-move\", { gameId: game._id, player: playerNumber.current, position: position });\r\n    }\r\n  }\r\n\r\n  gameActions.createGame = async () => {\r\n    if (!authTokens) return;\r\n\r\n    if (isWaiting) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      roomId: roomInfo._id,\r\n      maxCol: 20,\r\n      maxRow: 20,\r\n      winCondition: 5,\r\n    }\r\n    try {\r\n      setLoadingPrompt(\"Đang tạo một ván chơi mới, vui lòng chờ...\");\r\n      const result = await Axios.post(API.url + \"/game/create\", data);\r\n\r\n      setGame(result.data);\r\n\r\n      socket.emit(\"new-game\", { gameId: result.data._id });\r\n      setLoadingPrompt(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoadingPrompt(null);\r\n    }\r\n  }\r\n\r\n  const handleCreateGameClick = async () => {\r\n    await gameActions.createGame();\r\n  }\r\n\r\n  const value = {\r\n    room: roomInfo,\r\n    game: game,\r\n    chat: chat,\r\n    username: username,\r\n    playerNumber: playerNumber.current,\r\n    gameActions: gameActions,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      <div>\r\n        {\r\n          game ?\r\n            <div style={{ display: 'flex' }}>\r\n              <Game timer={timer}></Game>\r\n\r\n              <div className={classes.roomTab}>\r\n                <RoomTab>\r\n                </RoomTab>\r\n              </div>\r\n\r\n\r\n            </div>\r\n            :\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n              <Grid container xs={12} spacing={1} className={classes.smallerContainer} style={{border:'2px solid #3F51B5', borderRadius: 5}} justify=\"center\">\r\n                <Grid container item xs={12} md={5} style={{\r\n                  alignSelf: 'stretch',\r\n                }} justify=\"center\">\r\n                  {havePlayer1Info?\r\n                    <PlayerCard\r\n                      username={player1Username.current}\r\n                      trophies={player1Trophies.current}\r\n                      won={player1GamesWon.current}\r\n                      lost={player1GamesLost.current}></PlayerCard>\r\n                  : \r\n                    <Box border={2} className={classes.root} style={{ marginLeft: 10 }} borderRadius={10}>\r\n                      <Paper className={classes.paper} elevation={0}>\r\n                        <div className={classes.row}>\r\n                          <img src={defaultAvatar} className={classes.image} alt=\"player1 avatar\"></img>\r\n                        </div>\r\n                        <Typography align='center' className={classes.usernameText}>\r\n                          Vị trí trống\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Box>\r\n                  }\r\n                </Grid>\r\n                <Grid container item xs={12} md={2} justify=\"center\">\r\n                  <img src={process.env.PUBLIC_URL + '/Index/VersusIcon.png'} className={classes.image} alt=\"vs image\"></img>\r\n                </Grid>\r\n                <Grid container item xs={12} md={5} style={{\r\n                  alignSelf: 'stretch'\r\n                }} justify=\"center\">\r\n                  {\r\n                    havePlayer2Info ? \r\n                      <PlayerCard\r\n                      username={player2Username.current}\r\n                      trophies={player2Trophies.current}\r\n                      won={player2GamesWon.current}\r\n                      lost={player2GamesLost.current}></PlayerCard>\r\n                    :\r\n                    <Box border={2} className={classes.root} style={{ marginLeft: 10 }} borderRadius={10}>\r\n                      <Paper className={classes.paper} elevation={0}>\r\n                        <div className={classes.row}>\r\n                          <img src={defaultAvatar} className={classes.image} alt=\"player1 avatar\"></img>\r\n                        </div>\r\n                        <Typography align='center' className={classes.usernameText}>\r\n                          Vị trí trống\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Box>\r\n                  }\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\">\r\n                  <Button onClick={handleCreateGameClick}>{isWaiting ? \"Waiting for player\" : \"Create Game\"}</Button>\r\n                </Grid>\r\n              </Grid>  \r\n            </Container>   \r\n        }\r\n\r\n\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          open={errorDialogText ? true : false}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleErrorDialogClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\">\r\n          <DialogTitle>\r\n            <Typography color=\"secondary\">\r\n              {\"Đã xảy ra lỗi...\"}\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {errorDialogText}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleErrorDialogClose} color=\"secondary\">\r\n              Đóng\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Backdrop open={isLoadingPrompt !== null} style={{ color: \"#fff\", zIndex: 100, justifyContent: \"center\" }}>\r\n          <Grid container item justify=\"center\">\r\n            <Grid container item xs={12} justify=\"center\"><CircularProgress color=\"inherit\" /></Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n              <Typography variant=\"body1\" style={{ color: 'white' }}>\r\n                {isLoadingPrompt}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n      </div>\r\n    </GameContext.Provider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js",["277","278","279","280","281","282","283"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { mdiTrophy } from '@mdi/js';\r\n\r\nimport defaultAvatar from \"../../assets/tic-tac-toe.png\";\r\nimport { Box, Icon, Paper, SvgIcon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 150,\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 150,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n\r\n  cardContent: {\r\n    paddingLeft: 6,\r\n    paddingRight: 10,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    alignContent: 'center',\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  usernameText: {\r\n    marginBottom: 10,\r\n  },\r\n\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  trophiesText: {\r\n    marginLeft: 5,\r\n  },\r\n\r\n});\r\n\r\nexport default function PlayerCard({ username, profileImage, trophies, won, lost }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box border={2} className={classes.root} style={{ marginLeft: 10 }} borderRadius={10}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        <div className={classes.row}>\r\n          <img src={profileImage? profileImage : defaultAvatar} className={classes.image} alt=\"player1 avatar\"></img>\r\n        </div>\r\n\r\n\r\n        <Typography align='center' className={classes.usernameText}>\r\n          {username}\r\n        </Typography>\r\n        <div className={classes.row}>\r\n          <SvgIcon>\r\n            <path d={mdiTrophy} />\r\n          </SvgIcon>\r\n\r\n          {/* <Icon>\r\n          <img src={mdiTrophy}></img>\r\n        </Icon> */}\r\n\r\n          <Typography className={classes.trophiesText}>{trophies}</Typography>\r\n        </div>\r\n\r\n        <Typography align='center'>\r\n          {`Won: ${won}`}\r\n        </Typography>\r\n\r\n        <Typography align='center'>\r\n          {`Lost: ${lost}`}\r\n        </Typography>\r\n      </Paper>\r\n\r\n    </Box>\r\n\r\n  );\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\views\\SignUp\\SignUp.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\api.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\contexts\\game.js",["284","285","286"],"import { createContext, useContext, useEffect, useState, useRef} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport API from '../services/api';\r\nimport socket from \"../services/socket\";\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function useGame() {\r\n  return useContext(GameContext);\r\n}\r\n\r\nexport function GameProvider(props) {\r\n  \r\n  // const [authTokens, setAuthTokens] = useState(existingTokens);\r\n\r\n  // const setTokens = (data) => {\r\n  //   if (data) {\r\n  //     localStorage.setItem(\"token\", data);\r\n  //   }\r\n  //   else {\r\n  //     localStorage.removeItem(\"token\");\r\n  //   }\r\n\r\n  //   setAuthTokens(data);\r\n  // }\r\n\r\n  // const value = { authTokens: authTokens, setAuthTokens: setTokens};\r\n\r\n\r\n  const [game, setGame]=useState(props.game);\r\n  \r\n  const playerNumber = useRef(0);\r\n\r\n  const gameActions = {};\r\n\r\n  gameActions.setInitialGameState = (fetchedGame, fetchedPlayerNumber) => {\r\n    setGame(fetchedGame);\r\n    playerNumber.current = fetchedPlayerNumber;\r\n  }\r\n\r\n  gameActions.makeMove = async (position) => {\r\n    await socket.emit(\"make-move\", {gameId: game._id, player: playerNumber, position: position});\r\n  }\r\n\r\n  const value = {\r\n    game: game,\r\n    playerNumber: playerNumber.current,\r\n    gameActions: gameActions,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n    </GameContext.Provider>\r\n  );\r\n\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchRoomTab-component.js",["287"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport RewatchHistory from './rewatchHistory-component';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport ChatHistory from './chatHistory-component';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function RewatchRoomTab() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{maxWidth: 500, height: 670}}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab label=\"History\" {...a11yProps(0)} />\r\n        <Tab label=\"Chat\" {...a11yProps(0)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <RewatchHistory></RewatchHistory>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <ChatHistory></ChatHistory>\r\n      </TabPanel>\r\n    </Paper>\r\n  );\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchGame-component.js",["288","289","290","291","292","293","294","295","296","297"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport RewatchBoard from './rewatchBoard-component.js';\r\nimport ServiceGame from '../../services/serviceGame';\r\nimport io from \"socket.io-client\";\r\nimport socket from '../../services/socket';\r\nimport { useGame } from '../../contexts/game.js';\r\nimport Axios from 'axios';\r\nimport API from '../../services/api.js';\r\nimport { Button, ButtonBase, Container } from '@material-ui/core';\r\nimport PlayerCard from '../PlayerCard/playerCard-component.js';\r\n\r\n\r\nfunction RewatchGame() {\r\n\r\n  const { game } = useGame();\r\n\r\n  let winnerMessage;\r\n\r\n\r\n  // const fetchData = useCallback(async () => {\r\n  //   if (game.winner !== 0) {\r\n  //     if (game)\r\n  //   }\r\n\r\n  //   const username = await Axios.get(API.url + `/api/game/`)\r\n  // }, []);\r\n\r\n  // // useEffect(() => {\r\n  // //   fetchData();\r\n  // // }, [fetchData])\r\n\r\n  switch (game.winner) {\r\n    case 1:\r\n      winnerMessage = `${game.player1.username} has won`;\r\n      break;\r\n\r\n    case 2:\r\n      winnerMessage = `${game.player2.username} has won`;\r\n      break;\r\n\r\n    case 3:\r\n      winnerMessage = \"Tie, both have won\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // const [socket, setSocket] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   setSocket(io.connect(API.url));\r\n  //   console.log(props.game);\r\n  // }, []);\r\n\r\n  // useEffect(() => () => {\r\n  //   // socket.disconnect();\r\n  // },[])\r\n\r\n  return (\r\n\r\n    <div className=\"game\">\r\n      <Container>\r\n        <div>\r\n          <h1>{winnerMessage}</h1>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex' }}>\r\n          <div className=\"game-board\">\r\n            <RewatchBoard />\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <PlayerCard\r\n              username={game.player1.username}\r\n              trophies={game.player1.trophies}\r\n              won={game.player1.gamesWon}\r\n              lost={game.player1.gamesLost}></PlayerCard>\r\n            <div style={{ flexGrow: 1 }} />\r\n            <div style={{ flexGrow: 1 }} />\r\n            <PlayerCard\r\n              username={game.player2.username}\r\n              trophies={game.player2.trophies}\r\n              won={game.player2.gamesWon}\r\n              lost={game.player2.gamesLost}></PlayerCard>\r\n          </div>\r\n        </div>\r\n\r\n      </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RewatchGame;\r\n\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\CustomCard\\ImgMediaCard.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\GameRecords\\GameRecords.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js",["298"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePaginationActions from \"./TablePaginationActions\";\r\n\r\nconst columns = [\r\n  { id: \"username\", label: \"User\\u00a0name\", minWidth: 170 },\r\n  { id: \"rank\", label: \"Rank\", minWidth: 100 },\r\n  {\r\n    id: \"trophies\",\r\n    label: \"Trophies\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"totalGames\",\r\n    label: \"Games\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"winRate\",\r\n    label: \"Win\\u00a0rate\\u00a0(%)\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(username, rank, trophies, totalGames) {\r\n  const winRate = (trophies / totalGames) * 100;\r\n  return { username, rank, trophies, totalGames, winRate };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"user01\", \"Challenger\", 1301, 1412),\r\n  createData(\"user02\", \"Challenger\", 1293, 1402),\r\n  createData(\"user03\", \"Challenger\", 1274, 1390),\r\n  createData(\"user04\", \"Challenger\", 1238, 1401),\r\n  createData(\"user05\", \"Grand Master\", 1105, 1366),\r\n  createData(\"user06\", \"Grand Master\", 1050, 1420),\r\n  createData(\"user07\", \"Master\", 764, 902),\r\n  createData(\"user08\", \"Master\", 723, 912),\r\n  createData(\"user09\", \"Diamond\", 622, 878),\r\n  createData(\"user10\", \"Diamond\", 601, 900),\r\n  createData(\"user11\", \"Platinum\", 402, 782),\r\n  createData(\"user12\", \"Gold\", 387, 503),\r\n  createData(\"user13\", \"Silver\", 265, 409),\r\n  createData(\"user14\", \"Silver\", 223, 365),\r\n  createData(\"user15\", \"Bronze\", 109, 223),\r\n  createData(\"user16\", \"Iron\", 19, 76),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function RankingTable({rankData}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rankData\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.username}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const totalGames = parseInt(row[\"gamesWon\"]) + parseInt(row[\"gamesLost\"]);\r\n                      let value;\r\n                      switch(column.id){\r\n                        case \"rank\":\r\n                          const realRank = rankInfo.find((entry) => entry.minTrophies <= row.trophies);\r\n                          value = realRank.name;\r\n                          break;\r\n                        case \"totalGames\":\r\n                          value = totalGames\r\n                          break;\r\n                        case \"winRate\":\r\n                          value = totalGames !== 0 ? parseInt(row[\"gamesWon\"]) * 100 / totalGames : 0;\r\n                          break;\r\n                        default:\r\n                          value = row[column.id]; break;\r\n                      }\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[\r\n          5,\r\n          10,\r\n          25,\r\n          100,\r\n          //   { label: \"All\", value: -1 }\r\n        ]}\r\n        component=\"div\"\r\n        count={rankData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        ActionsComponent={TablePaginationActions}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst rankInfo = [\r\n  {\r\n    name: \"Challenger\",\r\n    minTrophies: 1200,\r\n  },\r\n  {\r\n    name: \"Grand master\",\r\n    minTrophies: 1000,\r\n  },\r\n  {\r\n    name: \"Master\",\r\n    minTrophies: 800,\r\n  },\r\n  {\r\n    name: \"Diamond\",\r\n    minTrophies: 600,\r\n  },\r\n  {\r\n    name: \"Platinum\",\r\n    minTrophies: 400,\r\n  },\r\n  {\r\n    name: \"Gold\",\r\n    minTrophies: 300,\r\n  },\r\n  {\r\n    name: \"Silver\",\r\n    minTrophies: 200,\r\n  },\r\n  {\r\n    name: \"Bronze\",\r\n    minTrophies: 100,\r\n  },\r\n  {\r\n    name: \"Iron\",\r\n    minTrophies: 0,\r\n  },\r\n];\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\game-component.js",["299"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport Board from \"./board-component.js\";\r\nimport socket from \"../../services/socket\";\r\nimport { useGame } from \"../../contexts/game.js\";\r\nimport { Button, Container, Typography, Box, Paper } from \"@material-ui/core\";\r\nimport PlayerCard from \"../PlayerCard/playerCard-component.js\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport defaultAvatar from \"../../assets/tic-tac-toe.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 150,\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 150,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    alignContent: \"center\",\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  usernameText: {\r\n    marginBottom: 10,\r\n  },\r\n\r\n  row: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nfunction Game(props) {\r\n  const classes = useStyles();\r\n\r\n  const { room, game, gameActions } = useGame();\r\n\r\n  let winnerMessage;\r\n\r\n  const [havePlayer1Info, setHavePlayer1Info] = useState(false);\r\n  const player1Username = useRef(null);\r\n  const player1Trophies = useRef(null);\r\n  const player1GamesWon = useRef(null);\r\n  const player1GamesLost = useRef(null);\r\n\r\n  const [havePlayer2Info, setHavePlayer2Info] = useState(false);\r\n  const player2Username = useRef(null);\r\n  const player2Trophies = useRef(null);\r\n  const player2GamesWon = useRef(null);\r\n  const player2GamesLost = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (room.Player1) {\r\n      player1Username.current = room.Player1.username;\r\n      player1Trophies.current = room.Player1.trophies;\r\n      player1GamesWon.current = room.Player1.gamesWon;\r\n      player1GamesLost.current = room.Player1.gamesLost;\r\n      setHavePlayer1Info(true);\r\n    } else {\r\n      setHavePlayer1Info(false);\r\n    }\r\n\r\n    if (room.Player2) {\r\n      player2Username.current = room.Player2.username;\r\n      player2Trophies.current = room.Player2.trophies;\r\n      player2GamesWon.current = room.Player2.gamesWon;\r\n      player2GamesLost.current = room.Player2.gamesLost;\r\n      setHavePlayer2Info(true);\r\n    } else {\r\n      setHavePlayer2Info(false);\r\n    }\r\n  }, [room]);\r\n\r\n  // const fetchData = useCallback(async () => {\r\n  //   if (game.winner !== 0) {\r\n  //     if (game)\r\n  //   }\r\n\r\n  //   const username = await Axios.get(API.url + `/api/game/`)\r\n  // }, []);\r\n\r\n  // // useEffect(() => {\r\n  // //   fetchData();\r\n  // // }, [fetchData])\r\n\r\n  switch (game.winner) {\r\n    case 1:\r\n      winnerMessage = `${player1Username.current} has won`;\r\n      break;\r\n\r\n    case 2:\r\n      winnerMessage = `${player2Username.current} has won`;\r\n      break;\r\n\r\n    case 3:\r\n      winnerMessage = \"Tie, both have won\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let nextTurnUser = \"\";\r\n  if (game.playerMoveNext === 1) {\r\n    nextTurnUser = player1Username.current;\r\n  } else {\r\n    nextTurnUser = player2Username.current;\r\n  }\r\n  let userTurnMessage = `It's turn of: ${nextTurnUser}`;\r\n\r\n  const createGameClickHandle = async () => {\r\n    await gameActions.createGame();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n    }\r\n  }, []);\r\n\r\n  // const [socket, setSocket] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   setSocket(io.connect(API.url));\r\n  //   console.log(props.game);\r\n  // }, []);\r\n\r\n  // useEffect(() => () => {\r\n  //   // socket.disconnect();\r\n  // },[])\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <Container>\r\n        <div>\r\n          <h1>{winnerMessage}</h1>\r\n          {game.winner === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <Button onClick={createGameClickHandle}>Create another game</Button>\r\n          )}\r\n        </div>\r\n\r\n        <div>{userTurnMessage}</div>\r\n        <div>{\"Time remaining: \" + props.timer}</div>\r\n\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            {havePlayer1Info ? (\r\n              <PlayerCard\r\n                username={player1Username.current}\r\n                trophies={player1Trophies.current}\r\n                won={player1GamesWon.current}\r\n                lost={player1GamesLost.current}\r\n              ></PlayerCard>\r\n            ) : (\r\n              <Box\r\n                border={2}\r\n                className={classes.root}\r\n                style={{ marginLeft: 10 }}\r\n                borderRadius={10}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <div className={classes.row}>\r\n                    <img\r\n                      src={defaultAvatar}\r\n                      className={classes.image}\r\n                      alt=\"player1 avatar\"\r\n                    ></img>\r\n                  </div>\r\n                  <Typography align=\"center\" className={classes.usernameText}>\r\n                    Người dùng đã thoát phòng\r\n                  </Typography>\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n            <div style={{ flexGrow: 1 }} />\r\n            {/* <div>{\"Time remaining: \" + props.timer}</div> */}\r\n            <div style={{ flexGrow: 1 }} />\r\n            {havePlayer2Info ? (\r\n              <PlayerCard\r\n                username={player2Username.current}\r\n                trophies={player2Trophies.current}\r\n                won={player2GamesWon.current}\r\n                lost={player2GamesLost.current}\r\n              ></PlayerCard>\r\n            ) : (\r\n              <Box\r\n                border={2}\r\n                className={classes.root}\r\n                style={{ marginLeft: 10 }}\r\n                borderRadius={10}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <div className={classes.row}>\r\n                    <img\r\n                      src={defaultAvatar}\r\n                      className={classes.image}\r\n                      alt=\"player1 avatar\"\r\n                    ></img>\r\n                  </div>\r\n                  <Typography align=\"center\" className={classes.usernameText}>\r\n                    Người dùng đã thoát phòng\r\n                  </Typography>\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchBoard-component.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\chatHistory-component.js",["300","301","302","303","304","305"],"import { IconButton, InputBase, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useGame } from \"../../contexts/game\";\r\nimport socket from \"../../services/socket\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    maxWidth: 400,\r\n    display: \"grid\",\r\n    gridTemplateRows: \"1fr 45px\",\r\n    gridTemplateColumns: \"1fr\",\r\n  },\r\n  msgContainer: {\r\n    marginBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflow: \"auto\",\r\n    maxHeight: 500,\r\n  },\r\n\r\n  message: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  bottomBar: {\r\n    gridRow: \"5/6\",\r\n    display: \"flex\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n  },\r\n  inputBase: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(1, 2),\r\n    backgroundColor: \"#f0f2f5\",\r\n    borderRadius: theme.spacing(16),\r\n  },\r\n  buttonSend: {\r\n    marginLeft: theme.spacing(1),\r\n    color: \"#0099ff\",\r\n  },\r\n}));\r\n\r\nexport default function ChatHistory() {\r\n  const { chat } = useGame();\r\n\r\n  console.log(chat);\r\n\r\n  // const handleOnChangeMessage = (e) => {\r\n  //   const trimedMessage = e.target.value.trim();\r\n  //   setMessage(trimedMessage);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Paper elevation={0} className={classes.msgContainer}>\r\n        {\r\n          chat ?\r\n            <div>\r\n              {chat.messages.map((e) => {\r\n                return (\r\n                  <Typography className={classes.message}>\r\n                    {`${e.username}: ${e.message}`}\r\n                  </Typography>\r\n                )\r\n              })}\r\n            </div>\r\n            :\r\n\r\n            <div></div>\r\n\r\n        }\r\n\r\n      </Paper>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\services\\serviceGame.js",["306","307"],"import { createGenerateClassName } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nconst ServiceGame = {\r\n  calculateWinner(squares, winCondition, maxRow, maxCol, squareIndex) {\r\n\r\n    const rowNumber = (squareIndex - (squareIndex % maxRow)) / maxRow\r\n    const colNumber = squareIndex % maxCol;\r\n    const protentialWinner = squares[squareIndex];\r\n\r\n    //do hang ngang\r\n\r\n    let i = rowNumber;\r\n    let j = colNumber;\r\n    let count = 1;\r\n    let highlight = [];\r\n    highlight.push(i * maxRow + j)\r\n\r\n    while (j - 1 >= 0) {\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (j + 1 < maxCol) {\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do hang doc\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0) {\r\n      i--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow) {\r\n      i++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo chinh\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j - 1 >= 0) {\r\n      i--;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j + 1 < maxCol) {\r\n      i++;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo phu\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j + 1 < maxCol) {\r\n      i--;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j - 1 >= 0) {\r\n      i++;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ServiceGame;","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchHistory-component.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\board-component.js",["308"],"import React from 'react';\r\nimport { useGame } from '../../contexts/game.js';\r\nimport Square from './square-component.js'\r\n\r\nfunction Board() {\r\n  const { game, gameActions } = useGame();\r\n\r\n  const maxRow = game.maxRow;\r\n  const maxCol = game.maxCol;\r\n\r\n  \r\n  const board = [];\r\n  const renderSquare = (i) => {\r\n    let value = \"\";\r\n\r\n    if (game.board[i] === 1) {\r\n      value = \"X\";\r\n    }\r\n    if (game.board[i] === 2) {\r\n      value = \"O\";\r\n    }\r\n\r\n    return <Square key={i} value={value} squareIndex = {i}/>;\r\n  }\r\n\r\n  for (let i = 0; i < maxRow; i++) {\r\n    const cols = [];\r\n\r\n    for (let j = 0; j < maxCol; j++) {\r\n      cols.push(renderSquare(i * maxRow + j));\r\n    }\r\n\r\n    board.push(\r\n      <div className=\"board-row\">\r\n        {cols}\r\n      </div>);\r\n  }\r\n\r\n  console.log(board);\r\n\r\n  return (\r\n    <div>\r\n      {board}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room\\square-component.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\RewatchRoom\\rewatchSquare-component.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js",["309"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, TextField, Button, Paper} from \"@material-ui/core\";\r\nimport { makeStyles } from  \"@material-ui/core\";\r\n\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport IndexPage_LoadingBackdrop_ActionCreator from '../../redux/actionCreators/Index/IndexPage_LoadingBackdrop_ActionCreator';\r\nimport IndexPage_ErrorPopUp_ActionCreator from '../../redux/actionCreators/Index/IndexPage_ErrorPopUp_ActionCreator';\r\nimport IndexPage_RoomPasswordPrompt_ActionCreator from '../../redux/actionCreators/Index/IndexPage_RoomPasswordPrompt_ActionCreator';\r\nimport Global_IsAwaitingServerResponse_ActionCreator from \"../../redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator\";\r\n\r\nimport CaroOnlineStore from '../../redux/store';\r\n\r\nimport Axios from 'axios';\r\nimport API from \"../../services/api\";\r\nimport socket from '../../services/socket';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexDirection: \"row\",\r\n    flexWrap: 'wrap',\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  typeInRoomIdControl: {\r\n    flexWrap: 'wrap',\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  gridItem: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  typeInRoomIdTextField: {\r\n    width: \"80%\"\r\n  },\r\n  button: {\r\n    borderRadius: 30,\r\n  },\r\n  paperAroundTypeInRoomIdControl: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function RoomNavigator({onCreateRoomClick}){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const {authTokens} = useAuth();\r\n\r\n    const [roomId, setRoomId] = useState(null);\r\n\r\n    const handleJoinRoomClick = () => {\r\n      if(!roomId || roomId.length <= 0) return;\r\n      CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(true));\r\n      (async () => {\r\n          try{\r\n            const getIsInRoom = await Axios.post(API.url + '/api/room-management/room/check-is-in-room');\r\n            const isInData = getIsInRoom.data;\r\n            if(isInData.data){\r\n              if(isInData.data.RoomType.NumberId !== 2){\r\n                  const roomLink = `/room/${isInData.data._id.toString()}`;\r\n                  history.push(roomLink);\r\n              }else {\r\n                  CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n                  CaroOnlineStore.dispatch(IndexPage_RoomPasswordPrompt_ActionCreator(isInData.data));\r\n              }   \r\n              return;            \r\n            }\r\n\r\n            const result = await Axios.get(API.url + `/api/room-management/room/${roomId}`);\r\n            const {data} = result.data;\r\n            if(data.RoomType.NumberId === 2) {\r\n              CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n              CaroOnlineStore.dispatch(IndexPage_RoomPasswordPrompt_ActionCreator(data));\r\n              return;\r\n            }       \r\n            \r\n            const roomLink = `/room/${roomId._id}`;\r\n            history.push(roomLink);\r\n          } catch (e) {\r\n            CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator('Không thể tham gia phòng chơi, bạn có thể thử tải lại trang hoặc liên hệ phía hỗ trợ'));\r\n            console.log(e);\r\n          }\r\n          CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n      })();\r\n    }\r\n\r\n    const handleMatchMakingClick = () => {\r\n      CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(true));\r\n      (async () => {\r\n          try{\r\n            // Go inside current playing room recorded on the server\r\n            const getIsInRoom = await Axios.post(API.url + '/api/room-management/room/check-is-in-room');\r\n            const isInData = getIsInRoom.data;\r\n            if(isInData.data){\r\n              if(isInData.data.RoomType.NumberId !== 2){\r\n                  const roomLink = `/room/${isInData.data._id.toString()}`;\r\n                  history.push(roomLink);\r\n              }else {\r\n                  CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n                  CaroOnlineStore.dispatch(IndexPage_RoomPasswordPrompt_ActionCreator(isInData.data));\r\n              }   \r\n              return;            \r\n            }\r\n\r\n            // Else, matchmake since user is not in any room, turn on awaiting server respond\r\n            CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator('Đang chờ đợi nối cặp từ phía server...'));\r\n              // emit, on server will have an array ready\r\n            socket.emit('enter matchmaking queue');\r\n          } catch (e) {\r\n            CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator('Không thể tham gia phòng chơi, bạn có thể thử tải lại trang hoặc liên hệ phía hỗ trợ'));\r\n            console.log(e);\r\n          }\r\n          CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n      })();\r\n    }\r\n\r\n    return (\r\n        <Grid container item xs={12} className={classes.root}>\r\n            <Grid container item xs={12} sm={8} className={classes.gridItem}>\r\n                <Paper elevation={3} className={classes.paperAroundTypeInRoomIdControl}>\r\n                    <Grid container item className={classes.typeInRoomIdControl}>\r\n                        <TextField placeholder=\"Nhập mã phòng vào đây\"\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            className={classes.typeInRoomIdTextField}\r\n                            value={roomId ? roomId : ''}\r\n                            onChange={(e) => {\r\n                              e.target.value = e.target.value.slice(0,Math.min(100, e.target.value.length));\r\n                              setRoomId(e.target.value);\r\n                            }}>\r\n                        </TextField>\r\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleJoinRoomClick}>\r\n                            GO\r\n                        </Button>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            \r\n            <Grid container item xs={12} sm={2} className={classes.gridItem}>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button} disabled={authTokens ? false : true}\r\n                onClick={async () => {\r\n                  CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(true));\r\n                  try{\r\n                    const getIsInRoom = await Axios.post(API.url + `/api/room-management/room/check-is-in-room`);\r\n                    const isInData = getIsInRoom.data;\r\n                    if(isInData.data){\r\n                      if(isInData.data.RoomType.NumberId !== 2){\r\n                          const roomLink = `/room/${isInData.data._id.toString()}`;\r\n                          history.push(roomLink);\r\n                      }else {\r\n                          CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n                          CaroOnlineStore.dispatch(IndexPage_RoomPasswordPrompt_ActionCreator(isInData.data));\r\n                      }   \r\n                      return;            \r\n                    }\r\n                    onCreateRoomClick();\r\n                  } catch (e) {\r\n                    CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator('Không thể tạo phòng chơi, tài khoản bạn đang trong phòng chơi, vui lòng liên hệ hỗ trợ.'));\r\n                    console.log(e);\r\n                  }\r\n                  CaroOnlineStore.dispatch(IndexPage_LoadingBackdrop_ActionCreator(false));\r\n                }}>\r\n                    Tạo phòng\r\n                </Button>\r\n            </Grid>\r\n            \r\n            <Grid container item xs={12} sm={2} className={classes.gridItem}>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button} disabled={authTokens ? false : true}\r\n                onClick={handleMatchMakingClick}>\r\n                    Chơi nhanh\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js",[],"D:\\Coding\\ReactJs\\PTUDWNC-CQ17-31-DACK-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":38,"column":10,"nodeType":"316","messageId":"317","endLine":38,"endColumn":24},{"ruleId":"314","severity":1,"message":"318","line":48,"column":9,"nodeType":"316","messageId":"317","endLine":48,"endColumn":16},{"ruleId":"314","severity":1,"message":"319","line":1,"column":28,"nodeType":"316","messageId":"317","endLine":1,"endColumn":44},{"ruleId":"314","severity":1,"message":"320","line":1,"column":57,"nodeType":"316","messageId":"317","endLine":1,"endColumn":61},{"ruleId":"314","severity":1,"message":"321","line":1,"column":63,"nodeType":"316","messageId":"317","endLine":1,"endColumn":73},{"ruleId":"314","severity":1,"message":"322","line":3,"column":25,"nodeType":"316","messageId":"317","endLine":3,"endColumn":33},{"ruleId":"314","severity":1,"message":"323","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":19},{"ruleId":"314","severity":1,"message":"324","line":9,"column":7,"nodeType":"316","messageId":"317","endLine":9,"endColumn":15},{"ruleId":"314","severity":1,"message":"325","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":16},{"ruleId":"314","severity":1,"message":"326","line":3,"column":30,"nodeType":"316","messageId":"317","endLine":3,"endColumn":36},{"ruleId":"314","severity":1,"message":"327","line":3,"column":38,"nodeType":"316","messageId":"317","endLine":3,"endColumn":43},{"ruleId":"314","severity":1,"message":"328","line":3,"column":79,"nodeType":"316","messageId":"317","endLine":3,"endColumn":92},{"ruleId":"314","severity":1,"message":"329","line":3,"column":94,"nodeType":"316","messageId":"317","endLine":3,"endColumn":105},{"ruleId":"314","severity":1,"message":"330","line":3,"column":107,"nodeType":"316","messageId":"317","endLine":3,"endColumn":120},{"ruleId":"314","severity":1,"message":"331","line":3,"column":122,"nodeType":"316","messageId":"317","endLine":3,"endColumn":139},{"ruleId":"314","severity":1,"message":"332","line":6,"column":10,"nodeType":"316","messageId":"317","endLine":6,"endColumn":20},{"ruleId":"314","severity":1,"message":"333","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":14},{"ruleId":"314","severity":1,"message":"334","line":11,"column":10,"nodeType":"316","messageId":"317","endLine":11,"endColumn":17},{"ruleId":"314","severity":1,"message":"335","line":13,"column":8,"nodeType":"316","messageId":"317","endLine":13,"endColumn":23},{"ruleId":"314","severity":1,"message":"336","line":14,"column":8,"nodeType":"316","messageId":"317","endLine":14,"endColumn":53},{"ruleId":"314","severity":1,"message":"337","line":54,"column":11,"nodeType":"316","messageId":"317","endLine":54,"endColumn":17},{"ruleId":"314","severity":1,"message":"338","line":30,"column":17,"nodeType":"316","messageId":"317","endLine":30,"endColumn":21},{"ruleId":"314","severity":1,"message":"339","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":20},{"ruleId":"314","severity":1,"message":"340","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":31},{"ruleId":"314","severity":1,"message":"341","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":18},{"ruleId":"314","severity":1,"message":"342","line":11,"column":8,"nodeType":"316","messageId":"317","endLine":11,"endColumn":17},{"ruleId":"314","severity":1,"message":"343","line":12,"column":8,"nodeType":"316","messageId":"317","endLine":12,"endColumn":24},{"ruleId":"314","severity":1,"message":"344","line":13,"column":8,"nodeType":"316","messageId":"317","endLine":13,"endColumn":16},{"ruleId":"314","severity":1,"message":"320","line":14,"column":8,"nodeType":"316","messageId":"317","endLine":14,"endColumn":12},{"ruleId":"314","severity":1,"message":"321","line":15,"column":8,"nodeType":"316","messageId":"317","endLine":15,"endColumn":18},{"ruleId":"314","severity":1,"message":"345","line":16,"column":8,"nodeType":"316","messageId":"317","endLine":16,"endColumn":18},{"ruleId":"314","severity":1,"message":"346","line":17,"column":8,"nodeType":"316","messageId":"317","endLine":17,"endColumn":18},{"ruleId":"314","severity":1,"message":"321","line":7,"column":15,"nodeType":"316","messageId":"317","endLine":7,"endColumn":25},{"ruleId":"314","severity":1,"message":"347","line":2,"column":17,"nodeType":"316","messageId":"317","endLine":2,"endColumn":28},{"ruleId":"314","severity":1,"message":"322","line":2,"column":30,"nodeType":"316","messageId":"317","endLine":2,"endColumn":38},{"ruleId":"314","severity":1,"message":"322","line":2,"column":30,"nodeType":"316","messageId":"317","endLine":2,"endColumn":38},{"ruleId":"314","severity":1,"message":"348","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":19},{"ruleId":"349","severity":1,"message":"350","line":46,"column":6,"nodeType":"351","endLine":46,"endColumn":8,"suggestions":"352"},{"ruleId":"349","severity":1,"message":"353","line":33,"column":6,"nodeType":"351","endLine":33,"endColumn":8,"suggestions":"354"},{"ruleId":"314","severity":1,"message":"348","line":11,"column":10,"nodeType":"316","messageId":"317","endLine":11,"endColumn":19},{"ruleId":"314","severity":1,"message":"336","line":39,"column":8,"nodeType":"316","messageId":"317","endLine":39,"endColumn":53},{"ruleId":"349","severity":1,"message":"355","line":162,"column":6,"nodeType":"351","endLine":162,"endColumn":29,"suggestions":"356"},{"ruleId":"349","severity":1,"message":"357","line":210,"column":6,"nodeType":"351","endLine":210,"endColumn":15,"suggestions":"358"},{"ruleId":"349","severity":1,"message":"359","line":308,"column":6,"nodeType":"351","endLine":308,"endColumn":38,"suggestions":"360"},{"ruleId":"361","severity":1,"message":"362","line":411,"column":19,"nodeType":"363","endLine":411,"endColumn":120},{"ruleId":"314","severity":1,"message":"364","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":12},{"ruleId":"314","severity":1,"message":"365","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":22},{"ruleId":"314","severity":1,"message":"366","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":19},{"ruleId":"314","severity":1,"message":"367","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":19},{"ruleId":"314","severity":1,"message":"368","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":17},{"ruleId":"314","severity":1,"message":"325","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":14},{"ruleId":"314","severity":1,"message":"369","line":13,"column":15,"nodeType":"316","messageId":"317","endLine":13,"endColumn":19},{"ruleId":"314","severity":1,"message":"370","line":1,"column":37,"nodeType":"316","messageId":"317","endLine":1,"endColumn":46},{"ruleId":"314","severity":1,"message":"371","line":2,"column":10,"nodeType":"316","messageId":"317","endLine":2,"endColumn":12},{"ruleId":"314","severity":1,"message":"372","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":11},{"ruleId":"314","severity":1,"message":"321","line":7,"column":15,"nodeType":"316","messageId":"317","endLine":7,"endColumn":25},{"ruleId":"314","severity":1,"message":"347","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":28},{"ruleId":"314","severity":1,"message":"370","line":1,"column":30,"nodeType":"316","messageId":"317","endLine":1,"endColumn":39},{"ruleId":"314","severity":1,"message":"322","line":1,"column":41,"nodeType":"316","messageId":"317","endLine":1,"endColumn":49},{"ruleId":"314","severity":1,"message":"373","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":19},{"ruleId":"314","severity":1,"message":"371","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":10},{"ruleId":"314","severity":1,"message":"333","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":14},{"ruleId":"314","severity":1,"message":"374","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":13},{"ruleId":"314","severity":1,"message":"372","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":11},{"ruleId":"314","severity":1,"message":"325","line":9,"column":10,"nodeType":"316","messageId":"317","endLine":9,"endColumn":16},{"ruleId":"314","severity":1,"message":"375","line":9,"column":18,"nodeType":"316","messageId":"317","endLine":9,"endColumn":28},{"ruleId":"314","severity":1,"message":"376","line":44,"column":7,"nodeType":"316","messageId":"317","endLine":44,"endColumn":11},{"ruleId":"314","severity":1,"message":"347","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":28},{"ruleId":"314","severity":1,"message":"341","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":20},{"ruleId":"314","severity":1,"message":"377","line":1,"column":22,"nodeType":"316","messageId":"317","endLine":1,"endColumn":31},{"ruleId":"314","severity":1,"message":"378","line":3,"column":17,"nodeType":"316","messageId":"317","endLine":3,"endColumn":23},{"ruleId":"314","severity":1,"message":"322","line":3,"column":25,"nodeType":"316","messageId":"317","endLine":3,"endColumn":33},{"ruleId":"314","severity":1,"message":"379","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"314","severity":1,"message":"333","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":14},{"ruleId":"314","severity":1,"message":"380","line":1,"column":10,"nodeType":"316","messageId":"317","endLine":1,"endColumn":33},{"ruleId":"314","severity":1,"message":"371","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":10},{"ruleId":"314","severity":1,"message":"381","line":6,"column":17,"nodeType":"316","messageId":"317","endLine":6,"endColumn":28},{"ruleId":"314","severity":1,"message":"370","line":1,"column":27,"nodeType":"316","messageId":"317","endLine":1,"endColumn":36},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"no-unused-vars","'CustomBackdrop' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'MessageItem' is defined but never used.","'chatData' is assigned a value but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'Slide' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'useHistory' is defined but never used.","'socket' is defined but never used.","'useAuth' is defined but never used.","'CaroOnlineStore' is defined but never used.","'Global_IsAwaitingServerResponse_ActionCreator' is defined but never used.","'userId' is assigned a value but never used.","'room' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'IconButton' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FolderIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'useCallback' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'getAllGameRecordsOfUser' and 'getUserByUsername'. Either include them or remove the dependency array.","ArrayExpression",["384"],"React Hook React.useEffect has missing dependencies: 'activated' and 'activationToken'. Either include them or remove the dependency array.",["385"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["386"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has a missing dependency: 'callBackToServerOnQuit'. Either include it or remove the dependency array.",["388"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Icon' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'API' is defined but never used.","'ServiceGame' is defined but never used.","'Axios' is defined but never used.","'ButtonBase' is defined but never used.","'rows' is assigned a value but never used.","'InputBase' is defined but never used.","'useRef' is defined but never used.","'SendIcon' is defined but never used.","'createGenerateClassName' is defined but never used.","'gameActions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [getAllGameRecordsOfUser, getUserByUsername]",{"range":"399","text":"400"},"Update the dependencies array to be: [activated, activationToken]",{"range":"401","text":"402"},"Update the dependencies array to be: [authTokens, history, params.id]",{"range":"403","text":"404"},"Update the dependencies array to be: [fetchData, history]",{"range":"405","text":"406"},"Update the dependencies array to be: [history, playerInfo, params.id, callBackToServerOnQuit]",{"range":"407","text":"408"},[1361,1363],"[getAllGameRecordsOfUser, getUserByUsername]",[1057,1059],"[activated, activationToken]",[5601,5624],"[authTokens, history, params.id]",[6889,6898],"[fetchData, history]",[10224,10256],"[history, playerInfo, params.id, callBackToServerOnQuit]"]