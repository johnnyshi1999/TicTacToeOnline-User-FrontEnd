[{"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\index.js":"1","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\App.js":"2","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js":"3","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js":"4","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\auth.js":"5","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js":"6","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\socket.js":"7","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Ranking\\Ranking.js":"8","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Login\\Login.js":"9","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\SignUp\\SignUp.js":"10","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Index\\Index.js":"11","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\api.js":"12","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js":"13","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\game.js":"14","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js":"15","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\game-component.js":"16","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Filter-SideMenu-ForIndex\\Filter-SideMenu.js":"17","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js":"18","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js":"19","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js":"20","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\board-component.js":"21","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js":"22","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\serviceGame.js":"23","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js":"24","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\square-component.js":"25","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\store.js":"26","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js":"27","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js":"28","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js":"29","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js":"30","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js":"31","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js":"32","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js":"33","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js":"34","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js":"35","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\history-component.js":"36","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js":"37"},{"size":207,"mtime":1610249295757,"results":"38","hashOfConfig":"39"},{"size":4695,"mtime":1610544063387,"results":"40","hashOfConfig":"39"},{"size":4206,"mtime":1610471656662,"results":"41","hashOfConfig":"39"},{"size":861,"mtime":1610374691861,"results":"42","hashOfConfig":"39"},{"size":1698,"mtime":1610519704236,"results":"43","hashOfConfig":"39"},{"size":4753,"mtime":1610519704233,"results":"44","hashOfConfig":"39"},{"size":135,"mtime":1610519704236,"results":"45","hashOfConfig":"39"},{"size":2983,"mtime":1610518598413,"results":"46","hashOfConfig":"39"},{"size":4384,"mtime":1610460165135,"results":"47","hashOfConfig":"39"},{"size":6347,"mtime":1610460158044,"results":"48","hashOfConfig":"39"},{"size":18667,"mtime":1610519704237,"results":"49","hashOfConfig":"39"},{"size":71,"mtime":1610249295760,"results":"50","hashOfConfig":"39"},{"size":1703,"mtime":1610249295752,"results":"51","hashOfConfig":"39"},{"size":1367,"mtime":1610249295757,"results":"52","hashOfConfig":"39"},{"size":5927,"mtime":1610518598373,"results":"53","hashOfConfig":"39"},{"size":3084,"mtime":1610471656664,"results":"54","hashOfConfig":"39"},{"size":1878,"mtime":1609833370811,"results":"55","hashOfConfig":"39"},{"size":8343,"mtime":1610537483978,"results":"56","hashOfConfig":"39"},{"size":7163,"mtime":1610519704235,"results":"57","hashOfConfig":"39"},{"size":1637,"mtime":1610249295752,"results":"58","hashOfConfig":"39"},{"size":883,"mtime":1610371032514,"results":"59","hashOfConfig":"39"},{"size":2562,"mtime":1610249295754,"results":"60","hashOfConfig":"39"},{"size":3712,"mtime":1610249295760,"results":"61","hashOfConfig":"39"},{"size":10261,"mtime":1610518598391,"results":"62","hashOfConfig":"39"},{"size":533,"mtime":1610371032525,"results":"63","hashOfConfig":"39"},{"size":170,"mtime":1610249295759,"results":"64","hashOfConfig":"39"},{"size":781,"mtime":1610457865408,"results":"65","hashOfConfig":"39"},{"size":575,"mtime":1610457578909,"results":"66","hashOfConfig":"39"},{"size":169,"mtime":1610249295758,"results":"67","hashOfConfig":"39"},{"size":179,"mtime":1610249295758,"results":"68","hashOfConfig":"39"},{"size":11149,"mtime":1610518598393,"results":"69","hashOfConfig":"39"},{"size":190,"mtime":1610371050903,"results":"70","hashOfConfig":"39"},{"size":159,"mtime":1610371050914,"results":"71","hashOfConfig":"39"},{"size":2881,"mtime":1610519704234,"results":"72","hashOfConfig":"39"},{"size":1710,"mtime":1610471656663,"results":"73","hashOfConfig":"39"},{"size":2231,"mtime":1610471656664,"results":"74","hashOfConfig":"39"},{"size":2203,"mtime":1610519704234,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ecwvt3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\index.js",[],["158","159"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\App.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\auth.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js",["160"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\socket.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Ranking\\Ranking.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Login\\Login.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\SignUp\\SignUp.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Index\\Index.js",["161","162"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\api.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\game.js",["163","164","165"],"import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport API from '../services/api';\r\nimport socket from \"../services/socket\";\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function useGame() {\r\n  return useContext(GameContext);\r\n}\r\n\r\nexport function GameProvider(props) {\r\n  \r\n  // const [authTokens, setAuthTokens] = useState(existingTokens);\r\n\r\n  // const setTokens = (data) => {\r\n  //   if (data) {\r\n  //     localStorage.setItem(\"token\", data);\r\n  //   }\r\n  //   else {\r\n  //     localStorage.removeItem(\"token\");\r\n  //   }\r\n\r\n  //   setAuthTokens(data);\r\n  // }\r\n\r\n  // const value = { authTokens: authTokens, setAuthTokens: setTokens};\r\n\r\n\r\n  const [game, setGame]=useState(props.game);\r\n  \r\n  const [playerNumber, setPlayerNumber] = useState(0);\r\n\r\n  const gameActions = {};\r\n\r\n  gameActions.setInitialGameState = (fetchedGame, fetchedPlayerNumber) => {\r\n    setGame(fetchedGame);\r\n    setPlayerNumber(fetchedPlayerNumber);\r\n  }\r\n\r\n  gameActions.makeMove = async (position) => {\r\n    await socket.emit(\"make-move\", {gameId: game._id, player: playerNumber, position: position});\r\n  }\r\n\r\n  const value = {\r\n    game: game,\r\n    playerNumber: playerNumber,\r\n    gameActions: gameActions,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n    </GameContext.Provider>\r\n  );\r\n\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js",["166"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePaginationActions from \"./TablePaginationActions\";\r\n\r\nconst columns = [\r\n  { id: \"username\", label: \"User\\u00a0name\", minWidth: 170 },\r\n  { id: \"rank\", label: \"Rank\", minWidth: 100 },\r\n  {\r\n    id: \"trophies\",\r\n    label: \"Trophies\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"totalGames\",\r\n    label: \"Games\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"winRate\",\r\n    label: \"Win\\u00a0rate\\u00a0(%)\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(username, rank, trophies, totalGames) {\r\n  const winRate = (trophies / totalGames) * 100;\r\n  return { username, rank, trophies, totalGames, winRate };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"user01\", \"Challenger\", 1301, 1412),\r\n  createData(\"user02\", \"Challenger\", 1293, 1402),\r\n  createData(\"user03\", \"Challenger\", 1274, 1390),\r\n  createData(\"user04\", \"Challenger\", 1238, 1401),\r\n  createData(\"user05\", \"Grand Master\", 1105, 1366),\r\n  createData(\"user06\", \"Grand Master\", 1050, 1420),\r\n  createData(\"user07\", \"Master\", 764, 902),\r\n  createData(\"user08\", \"Master\", 723, 912),\r\n  createData(\"user09\", \"Diamond\", 622, 878),\r\n  createData(\"user10\", \"Diamond\", 601, 900),\r\n  createData(\"user11\", \"Platinum\", 402, 782),\r\n  createData(\"user12\", \"Gold\", 387, 503),\r\n  createData(\"user13\", \"Silver\", 265, 409),\r\n  createData(\"user14\", \"Silver\", 223, 365),\r\n  createData(\"user15\", \"Bronze\", 109, 223),\r\n  createData(\"user16\", \"Iron\", 19, 76),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function RankingTable({rankData}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rankData\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.username}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const totalGames = parseInt(row[\"gamesWon\"]) + parseInt(row[\"gamesLost\"]);\r\n                      let value;\r\n                      switch(column.id){\r\n                        case \"rank\":\r\n                          const realRank = rankInfo.find((entry) => entry.minTrophies <= row.trophies);\r\n                          value = realRank.name;\r\n                          break;\r\n                        case \"totalGames\":\r\n                          value = totalGames\r\n                          break;\r\n                        case \"winRate\":\r\n                          value = totalGames !== 0 ? parseInt(row[\"gamesWon\"]) * 100 / totalGames : 0;\r\n                          break;\r\n                        default:\r\n                          value = row[column.id]; break;\r\n                      }\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[\r\n          5,\r\n          10,\r\n          25,\r\n          100,\r\n          //   { label: \"All\", value: -1 }\r\n        ]}\r\n        component=\"div\"\r\n        count={rankData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        ActionsComponent={TablePaginationActions}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst rankInfo = [\r\n  {\r\n    name: \"Challenger\",\r\n    minTrophies: 1200,\r\n  },\r\n  {\r\n    name: \"Grand master\",\r\n    minTrophies: 1000,\r\n  },\r\n  {\r\n    name: \"Master\",\r\n    minTrophies: 800,\r\n  },\r\n  {\r\n    name: \"Diamond\",\r\n    minTrophies: 600,\r\n  },\r\n  {\r\n    name: \"Platinum\",\r\n    minTrophies: 400,\r\n  },\r\n  {\r\n    name: \"Gold\",\r\n    minTrophies: 300,\r\n  },\r\n  {\r\n    name: \"Silver\",\r\n    minTrophies: 200,\r\n  },\r\n  {\r\n    name: \"Bronze\",\r\n    minTrophies: 100,\r\n  },\r\n  {\r\n    name: \"Iron\",\r\n    minTrophies: 0,\r\n  },\r\n];\r\n","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\game-component.js",["167","168"],"import React, {useEffect, useState} from 'react';\r\nimport Board from './board-component.js';\r\nimport ServiceGame from '../../services/serviceGame';\r\nimport io from \"socket.io-client\";\r\nimport socket from '../../services/socket';\r\nimport { useGame } from '../../contexts/game.js';\r\n\r\n\r\nfunction Game() {\r\n\r\n  // const [socket, setSocket] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   setSocket(io.connect(API.url));\r\n  //   console.log(props.game);\r\n  // }, []);\r\n\r\n  // useEffect(() => () => {\r\n  //   // socket.disconnect();\r\n  // },[])\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n\r\n","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Filter-SideMenu-ForIndex\\Filter-SideMenu.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\board-component.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\serviceGame.js",["169","170"],"import { createGenerateClassName } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nconst ServiceGame = {\r\n  calculateWinner(squares, winCondition, maxRow, maxCol, squareIndex) {\r\n\r\n    const rowNumber = (squareIndex - (squareIndex % maxRow)) / maxRow\r\n    const colNumber = squareIndex % maxCol;\r\n    const protentialWinner = squares[squareIndex];\r\n\r\n    //do hang ngang\r\n\r\n    let i = rowNumber;\r\n    let j = colNumber;\r\n    let count = 1;\r\n    let highlight = [];\r\n    highlight.push(i * maxRow + j)\r\n\r\n    while (j - 1 >= 0) {\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (j + 1 < maxCol) {\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do hang doc\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0) {\r\n      i--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow) {\r\n      i++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo chinh\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j - 1 >= 0) {\r\n      i--;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j + 1 < maxCol) {\r\n      i++;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo phu\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j + 1 < maxCol) {\r\n      i--;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j - 1 >= 0) {\r\n      i++;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ServiceGame;","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\square-component.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\store.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js",["171","172"],"import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport API from \"../../services/api\";\r\nimport { Button, Typography, Dialog, Slide, Backdrop, Grid, CircularProgress, DialogActions, DialogTitle, DialogContent, DialogContentText, makeStyles } from '@material-ui/core';\r\nimport './index.css';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { GameContext } from '../../contexts/game';\r\nimport socket from '../../services/socket';\r\nimport Game from \"../../components/Room/game-component\";\r\nimport { useAuth } from '../../contexts/auth';\r\nimport PlayerCard from '../../components/PlayerCard/playerCard-component';\r\n\r\nimport CaroOnlineStore from '../../redux/store';\r\nimport Global_IsAwaitingServerResponse_ActionCreator from '../../redux/actionCreators/Global_IsAwaitingServerResponse_ActionCreator';\r\nimport IndexPage_ErrorPopUp_ActionCreator from '../../redux/actionCreators/Index/IndexPage_ErrorPopUp_ActionCreator';\r\nimport RoomTab from '../../components/Room/RoomTab-component';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  roomTab: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n})); \r\n\r\n\r\nexport default function GameRoom() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const [roomInfo, setRoomInfo] = useState(null);\r\n  const [chat, setChat] = useState(null);\r\n\r\n  const [game, setGame] = useState(null);\r\n  const [playerNumber, setPlayerNumber] = useState(0);\r\n  const playerInfo = useRef(null);\r\n  const [isLoadingPrompt, setLoadingPrompt] = useState(\"Đang tải phòng chơi, vui lòng chờ\");\r\n\r\n  const [errorDialogText, setErrorDialogText] = useState(null);\r\n  const [timer, setTimer] = useState(\"\");\r\n  const [isWaiting, setWaiting] = useState(true);\r\n\r\n  let isRepeatedTab = useRef(false);\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const { authTokens } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const fetchData = useCallback(async () => {\r\n\r\n    //get join result\r\n    try {\r\n      const joinResult = await Axios.get(API.url + `/api/room-management/room/join/${params.id}`);\r\n      // Redirect to index if not logged in user tries to enter a private room\r\n      if (!authTokens && joinResult.data.room.RoomType.NumberId === 2) {\r\n        const roomLink = `/`;\r\n        window.location.href = roomLink;\r\n        return;\r\n      }\r\n\r\n      setRoomInfo(joinResult.data.room);\r\n      setPlayerNumber(joinResult.data.playerNumber);\r\n      setUsername(joinResult.data.username);\r\n\r\n      if (joinResult.data.currentGame) {\r\n        setGame(joinResult.data.currentGame);\r\n      }\r\n\r\n      // Check user is logged in, if he is, check currentRoomId if not have and user is a player in this room\r\n      // if he is player 1 or 2 in the room\r\n      if (authTokens) {\r\n        const currentRoom_Id = localStorage.getItem(\"isPlayingInRoomId\");\r\n        if(!currentRoom_Id && joinResult.data.playerNumber !== 0){\r\n          localStorage.setItem(\"isPlayingInRoomId\", params.id);\r\n        }\r\n      }\r\n\r\n      const joinRoomPayload = {roomId: joinResult.data.room._id};\r\n      if(joinResult.data.playerNumber !== 0){\r\n        joinRoomPayload.playerNumber = joinResult.data.playerNumber;\r\n        switch(parseInt(joinResult.data.playerNumber)){\r\n          case 1: \r\n            joinRoomPayload.playerId = joinResult.data.room.Player1._id;\r\n            playerInfo.current = joinResult.data.room.Player1;\r\n            break;\r\n          case 2: \r\n            joinRoomPayload.playerId = joinResult.data.room.Player2._id;\r\n            playerInfo.current = joinResult.data.room.Player2;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      socket.emit(\"join-room\", joinRoomPayload);\r\n\r\n      setLoadingPrompt(null);\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n      localStorage.removeItem(\"isPlayingInRoomId\");\r\n      setLoadingPrompt(null);\r\n      setErrorDialogText('Đã xảy ra lỗi khi load phòng chơi, bạn sẽ được điều hướng về trang chủ sau đây');\r\n    }\r\n  }, [authTokens, params.id]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    socket.on(\"update-board\", (game) => {\r\n      console.log(\"on update-board\");\r\n      setGame(game);\r\n    });\r\n\r\n    socket.on(\"winner-found\", (game) => {\r\n      setGame(game);\r\n    });\r\n\r\n    socket.on(\"update-room\", (room) => {\r\n      if(room.IsDeleted){\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(\"Phòng chơi đã bị giải tán, mọi người sẽ về trang chủ...\"));\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n        \r\n        history.push(`/`);  \r\n        return;\r\n      }\r\n      setRoomInfo(room);\r\n    })\r\n\r\n    socket.on(\"update-new-game\", (game) => {\r\n      console.log(\"on update-new-game\");\r\n      setGame(game);\r\n    })\r\n\r\n    socket.on(\"countdown\", (countdown) => {\r\n      const timerString = `${Math.floor(countdown / 60)} : ${countdown % 60}`;\r\n\r\n      setTimer(timerString);\r\n    })\r\n\r\n    socket.on(\"timeout\", (game) => {\r\n      setGame(game);\r\n      console.log(game);\r\n    });\r\n\r\n    socket.on(\"update-chat\", (chat) => {\r\n      setChat(chat);\r\n    });\r\n\r\n    socket.on('room-processing-error', (error) => {\r\n      console.log(error);\r\n    })\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n\r\n    isRepeatedTab.current = false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('disconnect-other-tabs', ({player, roomId, socketIdNot}) => {\r\n      if(playerNumber === player){\r\n        isRepeatedTab.current = true;\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(\"Vui lòng kết nối lại nếu muốn chơi tiếp...\"));\r\n        CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n        history.push('/');\r\n        return;\r\n      }\r\n    });\r\n  }, [history, playerNumber]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"room: \" + roomInfo);\r\n    // console.log(\"game: \" + game);\r\n    // console.log(\"player number: \" + playerNumber);\r\n\r\n    if (!roomInfo || !roomInfo.Player1 || !roomInfo.Player2) {\r\n      setWaiting(true);\r\n    }\r\n    else {\r\n      setWaiting(false);\r\n    }\r\n  }, [roomInfo, game, playerNumber]);\r\n\r\n  const callBackToServerOnQuit = useCallback(() => {\r\n    if(playerNumber === 0) return;\r\n    const prompt = \"Đang xử lý yêu cầu thoát game của bạn và đang điều hướng...\";\r\n    CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(prompt));\r\n    \r\n    try{\r\n      const payload = {roomId: params.id, playerNumber};\r\n      payload.player = playerInfo.current;\r\n      socket.emit('leave-room', payload);\r\n      localStorage.removeItem(\"isPlayingInRoomId\");\r\n      CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n    } catch (e) {\r\n      if(playerNumber !== 0){\r\n        CaroOnlineStore.dispatch(IndexPage_ErrorPopUp_ActionCreator(\"Bạn thoát game không thành công, có thể rejoin lại từ nút ngay dưới đây\"));\r\n      }\r\n      CaroOnlineStore.dispatch(Global_IsAwaitingServerResponse_ActionCreator(null));\r\n      history.push(`/`);         \r\n    }\r\n  }, [history, playerNumber, playerInfo, params.id]);\r\n\r\n  useEffect(() => {\r\n    window.unload = () => {\r\n      callBackToServerOnQuit();\r\n      window.unload = () => {\r\n\r\n      }\r\n    }\r\n    \r\n    return () => {\r\n      if(!isRepeatedTab.current){\r\n        callBackToServerOnQuit(); \r\n      }\r\n    }\r\n  }, [callBackToServerOnQuit]);\r\n\r\n  // useEffect(() => {\r\n  //   return () => callBackToServerOnQuit();\r\n  // });\r\n\r\n  const handleErrorDialogClose = () => {\r\n    setErrorDialogText(null);\r\n    setLoadingPrompt('Đang điều hướng về trang chủ...');\r\n    history.push('/');\r\n  };\r\n\r\n  const gameActions = {};\r\n\r\n  gameActions.makeMove = async (position) => {\r\n\r\n    //already marked\r\n    if (game.board[position] !== 0) {\r\n      return;\r\n    }\r\n    if (game.playerMoveNext === playerNumber && game.winner === 0) {\r\n      console.log(playerNumber);\r\n      await socket.emit(\"make-move\", { gameId: game._id, player: playerNumber, position: position });\r\n    }\r\n  }\r\n\r\n  gameActions.createGame = async () => {\r\n    if (!authTokens) return;\r\n\r\n    if (isWaiting) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      roomId: roomInfo._id,\r\n      maxCol: 20,\r\n      maxRow: 20,\r\n      winCondition: 5,\r\n    }\r\n    try {\r\n      setLoadingPrompt(\"Đang tạo một ván chơi mới, vui lòng chờ...\");\r\n      const result = await Axios.post(API.url + \"/game/create\", data);\r\n\r\n      setGame(result.data);\r\n\r\n      socket.emit(\"new-game\", { gameId: result.data._id });\r\n      setLoadingPrompt(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoadingPrompt(null);\r\n    }\r\n  }\r\n\r\n  const handleCreateGameClick = async () => {\r\n    await gameActions.createGame();\r\n  }\r\n\r\n  const value = {\r\n    room: roomInfo,\r\n    game: game,\r\n    chat: chat,\r\n    username: username,\r\n    playerNumber: playerNumber,\r\n    gameActions: gameActions,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n      <div>\r\n        {\r\n          game ?\r\n            <div style={{ display: 'flex' }}>\r\n              <Game timer={timer}></Game>\r\n\r\n              <div className={classes.roomTab}>\r\n                <RoomTab>\r\n                </RoomTab>\r\n              </div>\r\n\r\n\r\n            </div>\r\n            :\r\n            <Button onClick={handleCreateGameClick}>{isWaiting ? \"Waiting for player\" : \"Create Game\"}</Button>\r\n        }\r\n\r\n\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          open={errorDialogText ? true : false}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleErrorDialogClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\">\r\n          <DialogTitle>\r\n            <Typography color=\"secondary\">\r\n              {\"Đã xảy ra lỗi...\"}\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {errorDialogText}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleErrorDialogClose} color=\"secondary\">\r\n              Đóng\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Backdrop open={isLoadingPrompt !== null} style={{ color: \"#fff\", zIndex: 100, justifyContent: \"center\" }}>\r\n          <Grid container item justify=\"center\" width=\"100%\">\r\n            <Grid item xs={12}><CircularProgress color=\"inherit\" /></Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\" style={{ color: 'white' }}>\r\n                {isLoadingPrompt}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n      </div>\r\n    </GameContext.Provider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js",["173","174","175","176","177","178","179","180","181","182"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js",["183"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport History from './history-component';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport ChatBox from '../ChatBox/ChatBox';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function RoomTab() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{maxWidth: 500, height: 670}}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab label=\"History\" {...a11yProps(0)} />\r\n        <Tab label=\"Chat\" {...a11yProps(0)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <History></History>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <ChatBox></ChatBox>\r\n      </TabPanel>\r\n    </Paper>\r\n  );\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\history-component.js",["184"],"import { makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { useGame } from \"../../contexts/game\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    maxWidth: 400,\r\n  }, \r\n  message: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n\r\n  historyContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflow: \"auto\",\r\n    maxHeight: 670,\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nexport default function History() {\r\n\r\n  const classes = useStyles();\r\n\r\n  // const { game, room } = useGame();\r\n\r\n  const game = {};\r\n  game.maxRow = 20;\r\n  game.maxCol = 20;\r\n  game.history = [\r\n    {\r\n      player: 1,\r\n      position: 1,\r\n    },\r\n\r\n    {\r\n      player: 2,\r\n      position: 2,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.historyContainer}>\r\n        {game.history.map((element) => {\r\n          let username = \"\";\r\n          if (element.player === 1) {\r\n            username = \"room.Player1.username\";\r\n          }\r\n          else {\r\n            username = \"room.Player2.username\";\r\n          }\r\n\r\n          const positionX = Math.floor(element.position / game.maxRow);\r\n          const positionY = element.position % game.maxCol;\r\n\r\n          const message = `${username} made move on (${positionX} , ${positionY})`;\r\n          return (\r\n            <Typography className={classes.message}>\r\n              {message}\r\n            </Typography>);\r\n\r\n        })}\r\n      </div>\r\n\r\n    </Paper>)\r\n\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js",["185","186","187","188","189","190","191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":53,"column":15,"nodeType":"198","messageId":"199","endLine":53,"endColumn":21},{"ruleId":"196","severity":1,"message":"200","line":26,"column":8,"nodeType":"198","messageId":"199","endLine":26,"endColumn":53},{"ruleId":"196","severity":1,"message":"201","line":83,"column":9,"nodeType":"198","messageId":"199","endLine":83,"endColumn":16},{"ruleId":"196","severity":1,"message":"202","line":1,"column":37,"nodeType":"198","messageId":"199","endLine":1,"endColumn":46},{"ruleId":"196","severity":1,"message":"203","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":12},{"ruleId":"196","severity":1,"message":"204","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":11},{"ruleId":"196","severity":1,"message":"205","line":44,"column":7,"nodeType":"198","messageId":"199","endLine":44,"endColumn":11},{"ruleId":"196","severity":1,"message":"202","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"203","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":10},{"ruleId":"196","severity":1,"message":"206","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":33},{"ruleId":"196","severity":1,"message":"203","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":10},{"ruleId":"196","severity":1,"message":"207","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":155,"column":6,"nodeType":"210","endLine":155,"endColumn":15,"suggestions":"211"},{"ruleId":"196","severity":1,"message":"212","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":20},{"ruleId":"196","severity":1,"message":"213","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":31},{"ruleId":"196","severity":1,"message":"214","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"215","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":17},{"ruleId":"196","severity":1,"message":"216","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":24},{"ruleId":"196","severity":1,"message":"217","line":13,"column":8,"nodeType":"198","messageId":"199","endLine":13,"endColumn":16},{"ruleId":"196","severity":1,"message":"218","line":14,"column":8,"nodeType":"198","messageId":"199","endLine":14,"endColumn":12},{"ruleId":"196","severity":1,"message":"219","line":15,"column":8,"nodeType":"198","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"220","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":18},{"ruleId":"196","severity":1,"message":"221","line":17,"column":8,"nodeType":"198","messageId":"199","endLine":17,"endColumn":18},{"ruleId":"196","severity":1,"message":"219","line":7,"column":15,"nodeType":"198","messageId":"199","endLine":7,"endColumn":25},{"ruleId":"196","severity":1,"message":"222","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":17},{"ruleId":"196","severity":1,"message":"223","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":12},{"ruleId":"196","severity":1,"message":"224","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":22},{"ruleId":"196","severity":1,"message":"225","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"226","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"227","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":17},{"ruleId":"196","severity":1,"message":"228","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":14},{"ruleId":"196","severity":1,"message":"229","line":13,"column":15,"nodeType":"198","messageId":"199","endLine":13,"endColumn":19},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'Global_IsAwaitingServerResponse_ActionCreator' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'API' is defined but never used.","'rows' is assigned a value but never used.","'createGenerateClassName' is defined but never used.","'PlayerCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'IconButton' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'FolderIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'useGame' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},"Update the dependencies array to be: [fetchData, history]",{"range":"235","text":"236"},[5377,5386],"[fetchData, history]"]