[{"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\index.js":"1","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\App.js":"2","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js":"3","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js":"4","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\auth.js":"5","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js":"6","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\socket.js":"7","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Ranking\\Ranking.js":"8","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Login\\Login.js":"9","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\SignUp\\SignUp.js":"10","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Index\\Index.js":"11","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\api.js":"12","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js":"13","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\game.js":"14","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js":"15","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\game-component.js":"16","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Filter-SideMenu-ForIndex\\Filter-SideMenu.js":"17","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js":"18","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js":"19","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js":"20","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\board-component.js":"21","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js":"22","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\serviceGame.js":"23","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js":"24","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\square-component.js":"25","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\store.js":"26","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js":"27","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js":"28","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js":"29","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js":"30","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js":"31","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js":"32","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js":"33","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js":"34","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js":"35","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\history-component.js":"36","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js":"37"},{"size":207,"mtime":1610249295757,"results":"38","hashOfConfig":"39"},{"size":3672,"mtime":1610506022895,"results":"40","hashOfConfig":"39"},{"size":4206,"mtime":1610471656662,"results":"41","hashOfConfig":"39"},{"size":861,"mtime":1610374691861,"results":"42","hashOfConfig":"39"},{"size":1332,"mtime":1610471656665,"results":"43","hashOfConfig":"39"},{"size":4495,"mtime":1610502717418,"results":"44","hashOfConfig":"39"},{"size":133,"mtime":1610249295760,"results":"45","hashOfConfig":"39"},{"size":2983,"mtime":1610506409933,"results":"46","hashOfConfig":"39"},{"size":4384,"mtime":1610460165135,"results":"47","hashOfConfig":"39"},{"size":6347,"mtime":1610460158044,"results":"48","hashOfConfig":"39"},{"size":18894,"mtime":1610509423495,"results":"49","hashOfConfig":"39"},{"size":71,"mtime":1610249295760,"results":"50","hashOfConfig":"39"},{"size":1703,"mtime":1610249295752,"results":"51","hashOfConfig":"39"},{"size":1367,"mtime":1610249295757,"results":"52","hashOfConfig":"39"},{"size":5927,"mtime":1610506764733,"results":"53","hashOfConfig":"39"},{"size":3084,"mtime":1610471656664,"results":"54","hashOfConfig":"39"},{"size":1878,"mtime":1609833370811,"results":"55","hashOfConfig":"39"},{"size":6517,"mtime":1610508015129,"results":"56","hashOfConfig":"39"},{"size":7163,"mtime":1610460324234,"results":"57","hashOfConfig":"39"},{"size":1637,"mtime":1610249295752,"results":"58","hashOfConfig":"39"},{"size":883,"mtime":1610371032514,"results":"59","hashOfConfig":"39"},{"size":2562,"mtime":1610249295754,"results":"60","hashOfConfig":"39"},{"size":3712,"mtime":1610249295760,"results":"61","hashOfConfig":"39"},{"size":10261,"mtime":1610510018167,"results":"62","hashOfConfig":"39"},{"size":533,"mtime":1610371032525,"results":"63","hashOfConfig":"39"},{"size":170,"mtime":1610249295759,"results":"64","hashOfConfig":"39"},{"size":781,"mtime":1610457865408,"results":"65","hashOfConfig":"39"},{"size":575,"mtime":1610457578909,"results":"66","hashOfConfig":"39"},{"size":169,"mtime":1610249295758,"results":"67","hashOfConfig":"39"},{"size":179,"mtime":1610249295758,"results":"68","hashOfConfig":"39"},{"size":11149,"mtime":1610518221642,"results":"69","hashOfConfig":"39"},{"size":190,"mtime":1610371050903,"results":"70","hashOfConfig":"39"},{"size":159,"mtime":1610371050914,"results":"71","hashOfConfig":"39"},{"size":2235,"mtime":1610471656662,"results":"72","hashOfConfig":"39"},{"size":1710,"mtime":1610471656663,"results":"73","hashOfConfig":"39"},{"size":2231,"mtime":1610471656664,"results":"74","hashOfConfig":"39"},{"size":3305,"mtime":1610471656663,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ecwvt3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\index.js",[],["159","160"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\App.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\ChatBox.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\auth.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\CustomAppBar\\CustomAppBar.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\socket.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Ranking\\Ranking.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Login\\Login.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\SignUp\\SignUp.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\Index\\Index.js",["161","162"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\api.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageItem.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\contexts\\game.js",["163","164","165"],"import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport API from '../services/api';\r\nimport socket from \"../services/socket\";\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function useGame() {\r\n  return useContext(GameContext);\r\n}\r\n\r\nexport function GameProvider(props) {\r\n  \r\n  // const [authTokens, setAuthTokens] = useState(existingTokens);\r\n\r\n  // const setTokens = (data) => {\r\n  //   if (data) {\r\n  //     localStorage.setItem(\"token\", data);\r\n  //   }\r\n  //   else {\r\n  //     localStorage.removeItem(\"token\");\r\n  //   }\r\n\r\n  //   setAuthTokens(data);\r\n  // }\r\n\r\n  // const value = { authTokens: authTokens, setAuthTokens: setTokens};\r\n\r\n\r\n  const [game, setGame]=useState(props.game);\r\n  \r\n  const [playerNumber, setPlayerNumber] = useState(0);\r\n\r\n  const gameActions = {};\r\n\r\n  gameActions.setInitialGameState = (fetchedGame, fetchedPlayerNumber) => {\r\n    setGame(fetchedGame);\r\n    setPlayerNumber(fetchedPlayerNumber);\r\n  }\r\n\r\n  gameActions.makeMove = async (position) => {\r\n    await socket.emit(\"make-move\", {gameId: game._id, player: playerNumber, position: position});\r\n  }\r\n\r\n  const value = {\r\n    game: game,\r\n    playerNumber: playerNumber,\r\n    gameActions: gameActions,\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={value}>\r\n    </GameContext.Provider>\r\n  );\r\n\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\RankingTable.js",["166"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePaginationActions from \"./TablePaginationActions\";\r\n\r\nconst columns = [\r\n  { id: \"username\", label: \"User\\u00a0name\", minWidth: 170 },\r\n  { id: \"rank\", label: \"Rank\", minWidth: 100 },\r\n  {\r\n    id: \"trophies\",\r\n    label: \"Trophies\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"totalGames\",\r\n    label: \"Games\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"winRate\",\r\n    label: \"Win\\u00a0rate\\u00a0(%)\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(username, rank, trophies, totalGames) {\r\n  const winRate = (trophies / totalGames) * 100;\r\n  return { username, rank, trophies, totalGames, winRate };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"user01\", \"Challenger\", 1301, 1412),\r\n  createData(\"user02\", \"Challenger\", 1293, 1402),\r\n  createData(\"user03\", \"Challenger\", 1274, 1390),\r\n  createData(\"user04\", \"Challenger\", 1238, 1401),\r\n  createData(\"user05\", \"Grand Master\", 1105, 1366),\r\n  createData(\"user06\", \"Grand Master\", 1050, 1420),\r\n  createData(\"user07\", \"Master\", 764, 902),\r\n  createData(\"user08\", \"Master\", 723, 912),\r\n  createData(\"user09\", \"Diamond\", 622, 878),\r\n  createData(\"user10\", \"Diamond\", 601, 900),\r\n  createData(\"user11\", \"Platinum\", 402, 782),\r\n  createData(\"user12\", \"Gold\", 387, 503),\r\n  createData(\"user13\", \"Silver\", 265, 409),\r\n  createData(\"user14\", \"Silver\", 223, 365),\r\n  createData(\"user15\", \"Bronze\", 109, 223),\r\n  createData(\"user16\", \"Iron\", 19, 76),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function RankingTable({rankData}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rankData\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.username}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const totalGames = parseInt(row[\"gamesWon\"]) + parseInt(row[\"gamesLost\"]);\r\n                      let value;\r\n                      switch(column.id){\r\n                        case \"rank\":\r\n                          const realRank = rankInfo.find((entry) => entry.minTrophies <= row.trophies);\r\n                          value = realRank.name;\r\n                          break;\r\n                        case \"totalGames\":\r\n                          value = totalGames\r\n                          break;\r\n                        case \"winRate\":\r\n                          value = totalGames !== 0 ? parseInt(row[\"gamesWon\"]) * 100 / totalGames : 0;\r\n                          break;\r\n                        default:\r\n                          value = row[column.id]; break;\r\n                      }\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[\r\n          5,\r\n          10,\r\n          25,\r\n          100,\r\n          //   { label: \"All\", value: -1 }\r\n        ]}\r\n        component=\"div\"\r\n        count={rankData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        ActionsComponent={TablePaginationActions}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst rankInfo = [\r\n  {\r\n    name: \"Challenger\",\r\n    minTrophies: 1200,\r\n  },\r\n  {\r\n    name: \"Grand master\",\r\n    minTrophies: 1000,\r\n  },\r\n  {\r\n    name: \"Master\",\r\n    minTrophies: 800,\r\n  },\r\n  {\r\n    name: \"Diamond\",\r\n    minTrophies: 600,\r\n  },\r\n  {\r\n    name: \"Platinum\",\r\n    minTrophies: 400,\r\n  },\r\n  {\r\n    name: \"Gold\",\r\n    minTrophies: 300,\r\n  },\r\n  {\r\n    name: \"Silver\",\r\n    minTrophies: 200,\r\n  },\r\n  {\r\n    name: \"Bronze\",\r\n    minTrophies: 100,\r\n  },\r\n  {\r\n    name: \"Iron\",\r\n    minTrophies: 0,\r\n  },\r\n];\r\n","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\game-component.js",["167","168"],"import React, {useEffect, useState} from 'react';\r\nimport Board from './board-component.js';\r\nimport ServiceGame from '../../services/serviceGame';\r\nimport io from \"socket.io-client\";\r\nimport socket from '../../services/socket';\r\nimport { useGame } from '../../contexts/game.js';\r\n\r\n\r\nfunction Game() {\r\n\r\n  // const [socket, setSocket] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   setSocket(io.connect(API.url));\r\n  //   console.log(props.game);\r\n  // }, []);\r\n\r\n  // useEffect(() => () => {\r\n  //   // socket.disconnect();\r\n  // },[])\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n\r\n","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Filter-SideMenu-ForIndex\\Filter-SideMenu.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-Navigator-ForIndex\\Room-Navigator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Rooms-Grid-ForIndex\\Rooms-Grid.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\ChatBox\\MessageBubble.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\board-component.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\RankingTable\\TablePaginationActions.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\services\\serviceGame.js",["169","170"],"import { createGenerateClassName } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nconst ServiceGame = {\r\n  calculateWinner(squares, winCondition, maxRow, maxCol, squareIndex) {\r\n\r\n    const rowNumber = (squareIndex - (squareIndex % maxRow)) / maxRow\r\n    const colNumber = squareIndex % maxCol;\r\n    const protentialWinner = squares[squareIndex];\r\n\r\n    //do hang ngang\r\n\r\n    let i = rowNumber;\r\n    let j = colNumber;\r\n    let count = 1;\r\n    let highlight = [];\r\n    highlight.push(i * maxRow + j)\r\n\r\n    while (j - 1 >= 0) {\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (j + 1 < maxCol) {\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do hang doc\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0) {\r\n      i--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow) {\r\n      i++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo chinh\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j - 1 >= 0) {\r\n      i--;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j + 1 < maxCol) {\r\n      i++;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    //do duong cheo phu\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n    highlight = [];\r\n    highlight.push(i * maxRow + j);\r\n    count = 1;\r\n\r\n    while (i - 1 >= 0 && j + 1 < maxCol) {\r\n      i--;\r\n      j++;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    i = rowNumber;\r\n    j = colNumber;\r\n\r\n    while (i + 1 < maxRow && j - 1 >= 0) {\r\n      i++;\r\n      j--;\r\n      const arrayIndex = i * maxRow + j;\r\n      if (squares[arrayIndex] === protentialWinner) {\r\n        count++;\r\n        highlight.push(arrayIndex);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (count === winCondition) {\r\n      return { winner: protentialWinner, highlight: highlight };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ServiceGame;","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room-GridItem-ForIndex\\Room-GridItem.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\square-component.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\store.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\AppReducer.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\reducers\\Index\\IndexReducer.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_LoadingBackdrop_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_ErrorPopUp_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\views\\GameRoom\\gameRoom-component.js",["171","172"],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Global_IsAwaitingServerResponse_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\redux\\actionCreators\\Index\\IndexPage_RoomPasswordPrompt_ActionCreator.js",[],"D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\OnlineList\\onlineList-component.js",["173","174","175","176","177","178","179","180","181","182"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DefaultAvatar from '../../assets/tic-tac-toe.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 300,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n\r\n  listItem: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  RRLink: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n\r\n  }\r\n}));\r\n\r\nfunction OnlineListItem({ avatar, username }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Link className={classes.RRLink} to='/user'>\r\n    <ListItem className={classes.list}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <img style={{ width: 35, height: 35 }} src={DefaultAvatar} alt='avatar' />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Single-line item\"\r\n        />\r\n      </ListItem>\r\n    </Link>\r\n\r\n  );\r\n}\r\n\r\nexport default function OnlineList() {\r\n  const classes = useStyles();\r\n\r\n  const data = [1, 2, 3]\r\n  return (\r\n    <div className={classes.root}>\r\n      <List dense={true} className={classes.demo}>\r\n        {data.map((e) => {\r\n          return (\r\n            <OnlineListItem></OnlineListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n\r\n  );\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\RoomTab-component.js",["183"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport History from './history-component';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport ChatBox from '../ChatBox/ChatBox';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function RoomTab() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{maxWidth: 500, height: 670}}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab label=\"History\" {...a11yProps(0)} />\r\n        <Tab label=\"Chat\" {...a11yProps(0)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <History></History>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <ChatBox></ChatBox>\r\n      </TabPanel>\r\n    </Paper>\r\n  );\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\Room\\history-component.js",["184"],"import { makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { useGame } from \"../../contexts/game\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    maxWidth: 400,\r\n  }, \r\n  message: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n\r\n  historyContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflow: \"auto\",\r\n    maxHeight: 670,\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nexport default function History() {\r\n\r\n  const classes = useStyles();\r\n\r\n  // const { game, room } = useGame();\r\n\r\n  const game = {};\r\n  game.maxRow = 20;\r\n  game.maxCol = 20;\r\n  game.history = [\r\n    {\r\n      player: 1,\r\n      position: 1,\r\n    },\r\n\r\n    {\r\n      player: 2,\r\n      position: 2,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n\r\n    {\r\n      player: 1,\r\n      position: 3,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.historyContainer}>\r\n        {game.history.map((element) => {\r\n          let username = \"\";\r\n          if (element.player === 1) {\r\n            username = \"room.Player1.username\";\r\n          }\r\n          else {\r\n            username = \"room.Player2.username\";\r\n          }\r\n\r\n          const positionX = Math.floor(element.position / game.maxRow);\r\n          const positionY = element.position % game.maxCol;\r\n\r\n          const message = `${username} made move on (${positionX} , ${positionY})`;\r\n          return (\r\n            <Typography className={classes.message}>\r\n              {message}\r\n            </Typography>);\r\n\r\n        })}\r\n      </div>\r\n\r\n    </Paper>)\r\n\r\n}","D:\\GitClones\\TicTacToeOnline-User-FrontEnd\\src\\components\\PlayerCard\\playerCard-component.js",["185","186","187","188","189","190","191"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { mdiTrophy } from '@mdi/js';\r\n\r\nimport defaultAvatar from \"../../assets/tic-tac-toe.png\";\r\nimport { Box, Icon, Paper, SvgIcon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 150,\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 150,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n\r\n  cardContent: {\r\n    paddingLeft: 6,\r\n    paddingRight: 10,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    alignContent: 'center',\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  usernameText: {\r\n    marginBottom: 10,\r\n  },\r\n\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  trophiesText: {\r\n    marginLeft: 5,\r\n  },\r\n\r\n});\r\n\r\nexport default function PlayerCard({ username, trophies, won, lost }) {\r\n  const classes = useStyles();\r\n\r\n  // return (\r\n  //   <Box border={2} className={classes.root} style={{marginLeft:10}}>\r\n\r\n  //     <Card className={classes.root}>\r\n  //       <CardContent className={classes.cardContent}>\r\n  //         <div className={classes.row}>\r\n  //           <img src={defaultAvatar} className={classes.image} alt=\"player1 avatar\"></img>\r\n  //         </div>\r\n\r\n\r\n  //         <Typography align='center' className={classes.usernameText}>\r\n  //           {\"username\"}\r\n  //         </Typography>\r\n  //         <div className={classes.row}>\r\n  //           <SvgIcon>\r\n  //             <path d={mdiTrophy} />\r\n  //           </SvgIcon>\r\n\r\n  //           {/* <Icon>\r\n  //         <img src={mdiTrophy}></img>\r\n  //       </Icon> */}\r\n\r\n  //           <Typography className={classes.trophiesText}>12</Typography>\r\n  //         </div>\r\n\r\n  //         <Typography align='center'>\r\n  //           {`Won: ${10}`}\r\n  //         </Typography>\r\n\r\n  //         <Typography align='center'>\r\n  //           {`Lost: ${10}`}\r\n  //         </Typography>\r\n\r\n  //       </CardContent>\r\n  //     </Card>\r\n  //   </Box>\r\n\r\n  // );\r\n\r\n  return (\r\n    <Box border={2} className={classes.root} style={{ marginLeft: 10 }} borderRadius={10}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        <div className={classes.row}>\r\n          <img src={defaultAvatar} className={classes.image} alt=\"player1 avatar\"></img>\r\n        </div>\r\n\r\n\r\n        <Typography align='center' className={classes.usernameText}>\r\n          {username}\r\n        </Typography>\r\n        <div className={classes.row}>\r\n          <SvgIcon>\r\n            <path d={mdiTrophy} />\r\n          </SvgIcon>\r\n\r\n          {/* <Icon>\r\n          <img src={mdiTrophy}></img>\r\n        </Icon> */}\r\n\r\n          <Typography className={classes.trophiesText}>{trophies}</Typography>\r\n        </div>\r\n\r\n        <Typography align='center'>\r\n          {`Won: ${won}`}\r\n        </Typography>\r\n\r\n        <Typography align='center'>\r\n          {`Lost: ${lost}`}\r\n        </Typography>\r\n      </Paper>\r\n\r\n    </Box>\r\n\r\n  );\r\n}",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":26,"column":8,"nodeType":"198","messageId":"199","endLine":26,"endColumn":53},{"ruleId":"196","severity":1,"message":"200","line":83,"column":9,"nodeType":"198","messageId":"199","endLine":83,"endColumn":16},{"ruleId":"196","severity":1,"message":"201","line":1,"column":37,"nodeType":"198","messageId":"199","endLine":1,"endColumn":46},{"ruleId":"196","severity":1,"message":"202","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":12},{"ruleId":"196","severity":1,"message":"203","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":11},{"ruleId":"196","severity":1,"message":"204","line":44,"column":7,"nodeType":"198","messageId":"199","endLine":44,"endColumn":11},{"ruleId":"196","severity":1,"message":"201","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"202","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":10},{"ruleId":"196","severity":1,"message":"205","line":1,"column":10,"nodeType":"198","messageId":"199","endLine":1,"endColumn":33},{"ruleId":"196","severity":1,"message":"202","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":10},{"ruleId":"196","severity":1,"message":"206","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":155,"column":6,"nodeType":"209","endLine":155,"endColumn":15,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"211","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":20},{"ruleId":"196","severity":1,"message":"212","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":31},{"ruleId":"196","severity":1,"message":"213","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"214","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":17},{"ruleId":"196","severity":1,"message":"215","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":24},{"ruleId":"196","severity":1,"message":"216","line":13,"column":8,"nodeType":"198","messageId":"199","endLine":13,"endColumn":16},{"ruleId":"196","severity":1,"message":"217","line":14,"column":8,"nodeType":"198","messageId":"199","endLine":14,"endColumn":12},{"ruleId":"196","severity":1,"message":"218","line":15,"column":8,"nodeType":"198","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"219","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":18},{"ruleId":"196","severity":1,"message":"220","line":17,"column":8,"nodeType":"198","messageId":"199","endLine":17,"endColumn":18},{"ruleId":"196","severity":1,"message":"218","line":7,"column":15,"nodeType":"198","messageId":"199","endLine":7,"endColumn":25},{"ruleId":"196","severity":1,"message":"221","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":17},{"ruleId":"196","severity":1,"message":"222","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":12},{"ruleId":"196","severity":1,"message":"223","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":22},{"ruleId":"196","severity":1,"message":"224","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"225","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"226","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":17},{"ruleId":"196","severity":1,"message":"227","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":14},{"ruleId":"196","severity":1,"message":"228","line":13,"column":15,"nodeType":"198","messageId":"199","endLine":13,"endColumn":19},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Global_IsAwaitingServerResponse_ActionCreator' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'API' is defined but never used.","'rows' is assigned a value but never used.","'createGenerateClassName' is defined but never used.","'PlayerCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'IconButton' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'FolderIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'useGame' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},"Update the dependencies array to be: [fetchData, history]",{"range":"234","text":"235"},[5377,5386],"[fetchData, history]"]